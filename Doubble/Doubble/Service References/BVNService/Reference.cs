//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doubble.BVNService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BVNService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailWithHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendEmailWithHeader(string subject, string subbody, string recipient, string from, string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailWithHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendEmailWithHeaderAsync(string subject, string subbody, string recipient, string from, string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByAcctNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByAcctNo(string cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByAcctNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByAcctNoAsync(string cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByMobile(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByMobileAsync(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALBVN(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALBVNAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByCIF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByCIF(int cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByCIF", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByCIFAsync(int cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchesEWS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranchesEWS();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchesEWS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesEWSAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByCorporate(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getperfscore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Getperfscore(string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Getperfscore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetperfscoreAsync(string startdate, string enddate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManagerGrade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetManagerGrade(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetManagerGrade", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetManagerGradeAsync(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetELearningScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetELearningScore(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetELearningScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetELearningScoreAsync(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeTemplateNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeStateCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDepartmentAccountCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDepartmentAccountCodes(string braCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDepartmentAccountCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDepartmentAccountCodesAsync(string braCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewwelcomeMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NewwelcomeMessages(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewwelcomeMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NewwelcomeMessagesAsync(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessageEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendWelcomeMessageEmail(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessageEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendWelcomeMessageEmailAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendWelcomeMessages(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendWelcomeMessagesAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHumanManagerData(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerPayGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHumanManagerPayGroup(string pay_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerPayGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerPayGroupAsync(string pay_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetails(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetailsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBranchCodeForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTextToPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SendTextToPhoneNumber(string message, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTextToPhoneNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SendTextToPhoneNumberAsync(string message, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTellerForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAccount(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateIndividualCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateDao(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDao", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidateDaoAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateCorporateCustomer(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomerAsync(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAssociationCustomer(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerDetails(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDAOCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDAOCodes(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDAOCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDAOCodesAsync(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIntroducerCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIntroducerCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIntroducerCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIntroducerCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/validateBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string validateBvn(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/validateBvn", ReplyAction="*")]
        System.Threading.Tasks.Task<string> validateBvnAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTitle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerClassification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBVN(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBankName(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMail(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendMailNewServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool sendMailNewServer(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendMailNewServer", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> sendMailNewServerAsync(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename);
        
        // CODEGEN: Generating message contract since the wrapper name (GetBvn) of message GetBvnRequest does not match the default value (GetBvn1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Doubble.BVNService.GetBvnResponse GetBvn1(Doubble.BVNService.GetBvnRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBvn", ReplyAction="*")]
        System.Threading.Tasks.Task<Doubble.BVNService.GetBvnResponse> GetBvn1Async(Doubble.BVNService.GetBvnRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetailsByID(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByIDAsync(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogAccountRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogAccountRecord(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogAccountRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogAccountRecordAsync(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateAccountRecord(string nuban, Doubble.BVNService.ProcessingState state, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateAccountRecordAsync(string nuban, Doubble.BVNService.ProcessingState state, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeCemgApprasalScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ComputeCemgApprasalScore(string StaffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeCemgApprasalScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComputeCemgApprasalScoreAsync(string StaffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getOutstandingDocs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getOutstandingDocs(string acctcat, string[] docsSub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getOutstandingDocs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getOutstandingDocsAsync(string acctcat, string[] docsSub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeRetailsScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ComputeRetailsScore(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeRetailsScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComputeRetailsScoreAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMobiledocs(string acct_cat, Doubble.BVNService.sms smsUpdate, string acct_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMobiledocsAsync(string acct_cat, Doubble.BVNService.sms smsUpdate, string acct_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitAccountPackage", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SubmitAccountPackage(string acct_number, string acct_type, string acct_cat, string phnNumber, string acct_name, string product_selt, string product_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitAccountPackage", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SubmitAccountPackageAsync(string acct_number, string acct_type, string acct_cat, string phnNumber, string acct_name, string product_selt, string product_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocsNew", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMobiledocsNew(string acct_cat, string acct_Type, string ledgerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocsNew", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMobiledocsNewAsync(string acct_cat, string acct_Type, string ledgerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertIntoInfobip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertIntoInfobip(string msg, string msdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertIntoInfobip", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertIntoInfobipAsync(string msg, string msdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStaffAppraisalScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateStaffAppraisalScore(string staffNumber, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStaffAppraisalScore", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateStaffAppraisalScoreAsync(string staffNumber, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStaffDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertStaffDetails(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStaffDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertStaffDetailsAsync(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStaffCat(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCat", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStaffCatAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCemgStaffAppraisal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateCemgStaffAppraisal(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning, string process1, string process2, string process3, string process4, string financial1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCemgStaffAppraisal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateCemgStaffAppraisalAsync(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning, string process1, string process2, string process3, string process4, string financial1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCompletedAppraisal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateCompletedAppraisal(string staffstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCompletedAppraisal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateCompletedAppraisalAsync(string staffstatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStaffAppraisal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateStaffAppraisal(
                    string Staff_Number, 
                    string staffName, 
                    string grade, 
                    string Groups, 
                    string JobKnowledge, 
                    string AnalyticalSkills, 
                    string complianceKnowledge, 
                    string serviceDelivery, 
                    string prodKnowledge, 
                    string TotalScoreTechnical, 
                    string WorkHandled, 
                    string Accuracy, 
                    string Intiative, 
                    string Takingownership, 
                    string Turnaroundtime, 
                    string feedback, 
                    string processTotal, 
                    string Appearance, 
                    string Temperament, 
                    string Communication, 
                    string Punctuality, 
                    string Integrity, 
                    string BehaviourScoreTotal, 
                    string elearning, 
                    string kssattendance, 
                    string coaching, 
                    string learning_total, 
                    string overall_Total, 
                    string casa, 
                    string risk_asset, 
                    string deposit, 
                    string costoffund, 
                    string cutomeraccount, 
                    string eproducts, 
                    string FinancialTotals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStaffAppraisal", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateStaffAppraisalAsync(
                    string Staff_Number, 
                    string staffName, 
                    string grade, 
                    string Groups, 
                    string JobKnowledge, 
                    string AnalyticalSkills, 
                    string complianceKnowledge, 
                    string serviceDelivery, 
                    string prodKnowledge, 
                    string TotalScoreTechnical, 
                    string WorkHandled, 
                    string Accuracy, 
                    string Intiative, 
                    string Takingownership, 
                    string Turnaroundtime, 
                    string feedback, 
                    string processTotal, 
                    string Appearance, 
                    string Temperament, 
                    string Communication, 
                    string Punctuality, 
                    string Integrity, 
                    string BehaviourScoreTotal, 
                    string elearning, 
                    string kssattendance, 
                    string coaching, 
                    string learning_total, 
                    string overall_Total, 
                    string casa, 
                    string risk_asset, 
                    string deposit, 
                    string costoffund, 
                    string cutomeraccount, 
                    string eproducts, 
                    string FinancialTotals);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCEMPFormSubmit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogCEMPFormSubmit(string nuban, string productType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCEMPFormSubmit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogCEMPFormSubmitAsync(string nuban, string productType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctFullInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAcctFullInfo(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctFullInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAcctFullInfoAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPerfScoreEWS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void getPerfScoreEWS(string UserName, string dateUpdated, string staffName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPerfScoreEWS", ReplyAction="*")]
        System.Threading.Tasks.Task getPerfScoreEWSAsync(string UserName, string dateUpdated, string staffName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLedgerswithDocuments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getLedgerswithDocuments(string ledCode, string acctCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getLedgerswithDocuments", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getLedgerswithDocumentsAsync(string ledCode, string acctCat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDForCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserIDForCardRequest(string adUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDForCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserIDForCardRequestAsync(string adUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCardProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCardProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SubmitCardRequest(
                    string BranchCode, 
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SubmitCardRequestAsync(
                    string BranchCode, 
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet checkWatchList(string FN, string LN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN, string LN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertCardRequest(string bra_code, string cus_num, string cur_code, string cus_sho_name, string led_code, string nuban, string ACCT_TYPE, string NAME_LINE1, string NAME_LINE2, string ADD_LINE1, string EMAIL, string MOB_NUM, string BIR_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertCardRequestAsync(string bra_code, string cus_num, string cur_code, string cus_sho_name, string led_code, string nuban, string ACCT_TYPE, string NAME_LINE1, string NAME_LINE2, string ADD_LINE1, string EMAIL, string MOB_NUM, string BIR_DATE);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBvn", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBvnRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string bvn;
        
        public GetBvnRequest() {
        }
        
        public GetBvnRequest(string bvn) {
            this.bvn = bvn;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBvnResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBvnResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Data.DataSet GetBvnResult;
        
        public GetBvnResponse() {
        }
        
        public GetBvnResponse(System.Data.DataSet GetBvnResult) {
            this.GetBvnResult = GetBvnResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ProcessingState {
        
        /// <remarks/>
        AccountCreated,
        
        /// <remarks/>
        FormSubmission,
        
        /// <remarks/>
        FormSubmitted,
        
        /// <remarks/>
        PhysicalFormTransport,
        
        /// <remarks/>
        FormReceived,
        
        /// <remarks/>
        ADAUpload,
        
        /// <remarks/>
        CPCInputter,
        
        /// <remarks/>
        LegalVerfication,
        
        /// <remarks/>
        CPCVerifier,
        
        /// <remarks/>
        CPCLogistics,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class sms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string aOFField;
        
        private string mIDField;
        
        private string lCVField;
        
        private string ppField;
        
        private string mandateFormField;
        
        private string ubField;
        
        private string srField;
        
        private string bcField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AOF {
            get {
                return this.aOFField;
            }
            set {
                this.aOFField = value;
                this.RaisePropertyChanged("AOF");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
                this.RaisePropertyChanged("MID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LCV {
            get {
                return this.lCVField;
            }
            set {
                this.lCVField = value;
                this.RaisePropertyChanged("LCV");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string pp {
            get {
                return this.ppField;
            }
            set {
                this.ppField = value;
                this.RaisePropertyChanged("pp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MandateForm {
            get {
                return this.mandateFormField;
            }
            set {
                this.mandateFormField = value;
                this.RaisePropertyChanged("MandateForm");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string UB {
            get {
                return this.ubField;
            }
            set {
                this.ubField = value;
                this.RaisePropertyChanged("UB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SR {
            get {
                return this.srField;
            }
            set {
                this.srField = value;
                this.RaisePropertyChanged("SR");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string BC {
            get {
                return this.bcField;
            }
            set {
                this.bcField = value;
                this.RaisePropertyChanged("BC");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : Doubble.BVNService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<Doubble.BVNService.ServiceSoap>, Doubble.BVNService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendEmailWithHeader(string subject, string subbody, string recipient, string from, string cc) {
            return base.Channel.SendEmailWithHeader(subject, subbody, recipient, from, cc);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailWithHeaderAsync(string subject, string subbody, string recipient, string from, string cc) {
            return base.Channel.SendEmailWithHeaderAsync(subject, subbody, recipient, from, cc);
        }
        
        public System.Data.DataSet GetIMALCustByAcctNo(string cif_no) {
            return base.Channel.GetIMALCustByAcctNo(cif_no);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByAcctNoAsync(string cif_no) {
            return base.Channel.GetIMALCustByAcctNoAsync(cif_no);
        }
        
        public System.Data.DataSet GetIMALCustByMobile(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetIMALCustByMobile(mobile_234_format, mobile_080_format);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByMobileAsync(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetIMALCustByMobileAsync(mobile_234_format, mobile_080_format);
        }
        
        public System.Data.DataSet GetIMALBVN(string nuban) {
            return base.Channel.GetIMALBVN(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALBVNAsync(string nuban) {
            return base.Channel.GetIMALBVNAsync(nuban);
        }
        
        public System.Data.DataSet GetIMALCustByCIF(int cif_no) {
            return base.Channel.GetIMALCustByCIF(cif_no);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByCIFAsync(int cif_no) {
            return base.Channel.GetIMALCustByCIFAsync(cif_no);
        }
        
        public System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByName(lastname, firstname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByNameAsync(lastname, firstname);
        }
        
        public System.Data.DataSet GetBranchesEWS() {
            return base.Channel.GetBranchesEWS();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesEWSAsync() {
            return base.Channel.GetBranchesEWSAsync();
        }
        
        public System.Data.DataSet SearchExistingCustomerByCorporate(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporate(fullname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporateAsync(fullname);
        }
        
        public System.Data.DataSet Getperfscore(string startdate, string enddate) {
            return base.Channel.Getperfscore(startdate, enddate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetperfscoreAsync(string startdate, string enddate) {
            return base.Channel.GetperfscoreAsync(startdate, enddate);
        }
        
        public int GetManagerGrade(string staffId) {
            return base.Channel.GetManagerGrade(staffId);
        }
        
        public System.Threading.Tasks.Task<int> GetManagerGradeAsync(string staffId) {
            return base.Channel.GetManagerGradeAsync(staffId);
        }
        
        public System.Data.DataSet GetELearningScore(string staffId) {
            return base.Channel.GetELearningScore(staffId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetELearningScoreAsync(string staffId) {
            return base.Channel.GetELearningScoreAsync(staffId);
        }
        
        public System.Data.DataSet GetChequeTemplateNames() {
            return base.Channel.GetChequeTemplateNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync() {
            return base.Channel.GetChequeTemplateNamesAsync();
        }
        
        public System.Data.DataSet GetChequeStateCodes() {
            return base.Channel.GetChequeStateCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync() {
            return base.Channel.GetChequeStateCodesAsync();
        }
        
        public System.Data.DataSet GetDepartmentAccountCodes(string braCode) {
            return base.Channel.GetDepartmentAccountCodes(braCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDepartmentAccountCodesAsync(string braCode) {
            return base.Channel.GetDepartmentAccountCodesAsync(braCode);
        }
        
        public string SendSMS(string message, string gsm) {
            return base.Channel.SendSMS(message, gsm);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm) {
            return base.Channel.SendSMSAsync(message, gsm);
        }
        
        public string NewwelcomeMessages(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch) {
            return base.Channel.NewwelcomeMessages(customerID, accountNumber, acctcat, ledgerCode, customerName, branch);
        }
        
        public System.Threading.Tasks.Task<string> NewwelcomeMessagesAsync(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch) {
            return base.Channel.NewwelcomeMessagesAsync(customerID, accountNumber, acctcat, ledgerCode, customerName, branch);
        }
        
        public string SendWelcomeMessageEmail(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessageEmail(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public System.Threading.Tasks.Task<string> SendWelcomeMessageEmailAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessageEmailAsync(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public string SendWelcomeMessages(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessages(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public System.Threading.Tasks.Task<string> SendWelcomeMessagesAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessagesAsync(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequest(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequestAsync(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public System.Data.DataSet GetHumanManagerData(string staffNumber) {
            return base.Channel.GetHumanManagerData(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber) {
            return base.Channel.GetHumanManagerDataAsync(staffNumber);
        }
        
        public System.Data.DataSet GetHumanManagerPayGroup(string pay_group) {
            return base.Channel.GetHumanManagerPayGroup(pay_group);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerPayGroupAsync(string pay_group) {
            return base.Channel.GetHumanManagerPayGroupAsync(pay_group);
        }
        
        public System.Data.DataSet GetADDetails(string username) {
            return base.Channel.GetADDetails(username);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username) {
            return base.Channel.GetADDetailsAsync(username);
        }
        
        public System.Data.DataSet GetADDetailsByEmail(string email) {
            return base.Channel.GetADDetailsByEmail(email);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string email) {
            return base.Channel.GetADDetailsByEmailAsync(email);
        }
        
        public string GetBranchCodeForUser(string username) {
            return base.Channel.GetBranchCodeForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username) {
            return base.Channel.GetBranchCodeForUserAsync(username);
        }
        
        public int SendTextToPhoneNumber(string message, string phoneNumber) {
            return base.Channel.SendTextToPhoneNumber(message, phoneNumber);
        }
        
        public System.Threading.Tasks.Task<int> SendTextToPhoneNumberAsync(string message, string phoneNumber) {
            return base.Channel.SendTextToPhoneNumberAsync(message, phoneNumber);
        }
        
        public string GetTellerForUser(string username) {
            return base.Channel.GetTellerForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username) {
            return base.Channel.GetTellerForUserAsync(username);
        }
        
        public System.Data.DataSet CreateAccount(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName) {
            return base.Channel.CreateAccount(customerId, braCode, curCode, productCode, tellUsername, acctMgr, applyPND, acctName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName) {
            return base.Channel.CreateAccountAsync(customerId, braCode, curCode, productCode, tellUsername, acctMgr, applyPND, acctName);
        }
        
        public System.Data.DataSet CreateIndividualCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreateIndividualCustomer(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreateIndividualCustomerAsync(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public string ValidateDao(string Code) {
            return base.Channel.ValidateDao(Code);
        }
        
        public System.Threading.Tasks.Task<string> ValidateDaoAsync(string Code) {
            return base.Channel.ValidateDaoAsync(Code);
        }
        
        public System.Data.DataSet CreateCorporateCustomer(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin) {
            return base.Channel.CreateCorporateCustomer(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomerAsync(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin) {
            return base.Channel.CreateCorporateCustomerAsync(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin);
        }
        
        public System.Data.DataSet CreateAssociationCustomer(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode) {
            return base.Channel.CreateAssociationCustomer(tellUsername, organisation, incorporationDate, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode) {
            return base.Channel.CreateAssociationCustomerAsync(tellUsername, organisation, incorporationDate, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode);
        }
        
        public System.Data.DataSet GetCustomerDetails(string customerId) {
            return base.Channel.GetCustomerDetails(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerId) {
            return base.Channel.GetCustomerDetailsAsync(customerId);
        }
        
        public System.Data.DataSet GetDAOCodes(string branchCode) {
            return base.Channel.GetDAOCodes(branchCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDAOCodesAsync(string branchCode) {
            return base.Channel.GetDAOCodesAsync(branchCode);
        }
        
        public System.Data.DataSet GetIntroducerCodes() {
            return base.Channel.GetIntroducerCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIntroducerCodesAsync() {
            return base.Channel.GetIntroducerCodesAsync();
        }
        
        public System.Data.DataSet GetCurrencies() {
            return base.Channel.GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCurrenciesAsync() {
            return base.Channel.GetCurrenciesAsync();
        }
        
        public string validateBvn(string bvn) {
            return base.Channel.validateBvn(bvn);
        }
        
        public System.Threading.Tasks.Task<string> validateBvnAsync(string bvn) {
            return base.Channel.validateBvnAsync(bvn);
        }
        
        public System.Data.DataSet GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Data.DataSet GetTitle() {
            return base.Channel.GetTitle();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync() {
            return base.Channel.GetTitleAsync();
        }
        
        public System.Data.DataSet GetStates() {
            return base.Channel.GetStates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync() {
            return base.Channel.GetStatesAsync();
        }
        
        public System.Data.DataSet GetBranches() {
            return base.Channel.GetBranches();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync() {
            return base.Channel.GetBranchesAsync();
        }
        
        public System.Data.DataSet GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public System.Data.DataSet GetCustomerClassification() {
            return base.Channel.GetCustomerClassification();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync() {
            return base.Channel.GetCustomerClassificationAsync();
        }
        
        public System.Data.DataSet GetBVN(string bvn) {
            return base.Channel.GetBVN(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn) {
            return base.Channel.GetBVNAsync(bvn);
        }
        
        public string GetBankName(string bankCode) {
            return base.Channel.GetBankName(bankCode);
        }
        
        public System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode) {
            return base.Channel.GetBankNameAsync(bankCode);
        }
        
        public string SendMail(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMail(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMailAsync(destinationEmail, sourceEmail, body, subject);
        }
        
        public bool sendMailNewServer(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename) {
            return base.Channel.sendMailNewServer(destinationEmail, sourceEmail, ccEmailAddress, body, subject, filename);
        }
        
        public System.Threading.Tasks.Task<bool> sendMailNewServerAsync(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename) {
            return base.Channel.sendMailNewServerAsync(destinationEmail, sourceEmail, ccEmailAddress, body, subject, filename);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Doubble.BVNService.GetBvnResponse Doubble.BVNService.ServiceSoap.GetBvn1(Doubble.BVNService.GetBvnRequest request) {
            return base.Channel.GetBvn1(request);
        }
        
        public System.Data.DataSet GetBvn1(string bvn) {
            Doubble.BVNService.GetBvnRequest inValue = new Doubble.BVNService.GetBvnRequest();
            inValue.bvn = bvn;
            Doubble.BVNService.GetBvnResponse retVal = ((Doubble.BVNService.ServiceSoap)(this)).GetBvn1(inValue);
            return retVal.GetBvnResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Doubble.BVNService.GetBvnResponse> Doubble.BVNService.ServiceSoap.GetBvn1Async(Doubble.BVNService.GetBvnRequest request) {
            return base.Channel.GetBvn1Async(request);
        }
        
        public System.Threading.Tasks.Task<Doubble.BVNService.GetBvnResponse> GetBvn1Async(string bvn) {
            Doubble.BVNService.GetBvnRequest inValue = new Doubble.BVNService.GetBvnRequest();
            inValue.bvn = bvn;
            return ((Doubble.BVNService.ServiceSoap)(this)).GetBvn1Async(inValue);
        }
        
        public System.Data.DataSet GetADDetailsByID(string StaffID) {
            return base.Channel.GetADDetailsByID(StaffID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByIDAsync(string StaffID) {
            return base.Channel.GetADDetailsByIDAsync(StaffID);
        }
        
        public string LogAccountRecord(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType) {
            return base.Channel.LogAccountRecord(braCode, nuban, region, fullAcctNo, customerName, cemp, productType);
        }
        
        public System.Threading.Tasks.Task<string> LogAccountRecordAsync(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType) {
            return base.Channel.LogAccountRecordAsync(braCode, nuban, region, fullAcctNo, customerName, cemp, productType);
        }
        
        public string UpdateAccountRecord(string nuban, Doubble.BVNService.ProcessingState state, string comment) {
            return base.Channel.UpdateAccountRecord(nuban, state, comment);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountRecordAsync(string nuban, Doubble.BVNService.ProcessingState state, string comment) {
            return base.Channel.UpdateAccountRecordAsync(nuban, state, comment);
        }
        
        public System.Data.DataSet ComputeCemgApprasalScore(string StaffNumber) {
            return base.Channel.ComputeCemgApprasalScore(StaffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComputeCemgApprasalScoreAsync(string StaffNumber) {
            return base.Channel.ComputeCemgApprasalScoreAsync(StaffNumber);
        }
        
        public System.Data.DataSet getOutstandingDocs(string acctcat, string[] docsSub) {
            return base.Channel.getOutstandingDocs(acctcat, docsSub);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getOutstandingDocsAsync(string acctcat, string[] docsSub) {
            return base.Channel.getOutstandingDocsAsync(acctcat, docsSub);
        }
        
        public System.Data.DataSet ComputeRetailsScore(string staffNumber) {
            return base.Channel.ComputeRetailsScore(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComputeRetailsScoreAsync(string staffNumber) {
            return base.Channel.ComputeRetailsScoreAsync(staffNumber);
        }
        
        public string getMobiledocs(string acct_cat, Doubble.BVNService.sms smsUpdate, string acct_Type) {
            return base.Channel.getMobiledocs(acct_cat, smsUpdate, acct_Type);
        }
        
        public System.Threading.Tasks.Task<string> getMobiledocsAsync(string acct_cat, Doubble.BVNService.sms smsUpdate, string acct_Type) {
            return base.Channel.getMobiledocsAsync(acct_cat, smsUpdate, acct_Type);
        }
        
        public int SubmitAccountPackage(string acct_number, string acct_type, string acct_cat, string phnNumber, string acct_name, string product_selt, string product_Type) {
            return base.Channel.SubmitAccountPackage(acct_number, acct_type, acct_cat, phnNumber, acct_name, product_selt, product_Type);
        }
        
        public System.Threading.Tasks.Task<int> SubmitAccountPackageAsync(string acct_number, string acct_type, string acct_cat, string phnNumber, string acct_name, string product_selt, string product_Type) {
            return base.Channel.SubmitAccountPackageAsync(acct_number, acct_type, acct_cat, phnNumber, acct_name, product_selt, product_Type);
        }
        
        public string getMobiledocsNew(string acct_cat, string acct_Type, string ledgerCode) {
            return base.Channel.getMobiledocsNew(acct_cat, acct_Type, ledgerCode);
        }
        
        public System.Threading.Tasks.Task<string> getMobiledocsNewAsync(string acct_cat, string acct_Type, string ledgerCode) {
            return base.Channel.getMobiledocsNewAsync(acct_cat, acct_Type, ledgerCode);
        }
        
        public int insertIntoInfobip(string msg, string msdn) {
            return base.Channel.insertIntoInfobip(msg, msdn);
        }
        
        public System.Threading.Tasks.Task<int> insertIntoInfobipAsync(string msg, string msdn) {
            return base.Channel.insertIntoInfobipAsync(msg, msdn);
        }
        
        public int updateStaffAppraisalScore(string staffNumber, string stat) {
            return base.Channel.updateStaffAppraisalScore(staffNumber, stat);
        }
        
        public System.Threading.Tasks.Task<int> updateStaffAppraisalScoreAsync(string staffNumber, string stat) {
            return base.Channel.updateStaffAppraisalScoreAsync(staffNumber, stat);
        }
        
        public int insertStaffDetails(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat) {
            return base.Channel.insertStaffDetails(staffNumber, businessGroup, TotScore, FN, LN, MN, Cat);
        }
        
        public System.Threading.Tasks.Task<int> insertStaffDetailsAsync(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat) {
            return base.Channel.insertStaffDetailsAsync(staffNumber, businessGroup, TotScore, FN, LN, MN, Cat);
        }
        
        public System.Data.DataSet GetStaffCat(string staffNumber) {
            return base.Channel.GetStaffCat(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStaffCatAsync(string staffNumber) {
            return base.Channel.GetStaffCatAsync(staffNumber);
        }
        
        public int UpdateCemgStaffAppraisal(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning, string process1, string process2, string process3, string process4, string financial1) {
            return base.Channel.UpdateCemgStaffAppraisal(staffNumber, businessGroup, resolvedCompl, ccmsComp, branchServ, learning, process1, process2, process3, process4, financial1);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCemgStaffAppraisalAsync(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning, string process1, string process2, string process3, string process4, string financial1) {
            return base.Channel.UpdateCemgStaffAppraisalAsync(staffNumber, businessGroup, resolvedCompl, ccmsComp, branchServ, learning, process1, process2, process3, process4, financial1);
        }
        
        public int UpdateCompletedAppraisal(string staffstatus) {
            return base.Channel.UpdateCompletedAppraisal(staffstatus);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCompletedAppraisalAsync(string staffstatus) {
            return base.Channel.UpdateCompletedAppraisalAsync(staffstatus);
        }
        
        public void UpdateStaffAppraisal(
                    string Staff_Number, 
                    string staffName, 
                    string grade, 
                    string Groups, 
                    string JobKnowledge, 
                    string AnalyticalSkills, 
                    string complianceKnowledge, 
                    string serviceDelivery, 
                    string prodKnowledge, 
                    string TotalScoreTechnical, 
                    string WorkHandled, 
                    string Accuracy, 
                    string Intiative, 
                    string Takingownership, 
                    string Turnaroundtime, 
                    string feedback, 
                    string processTotal, 
                    string Appearance, 
                    string Temperament, 
                    string Communication, 
                    string Punctuality, 
                    string Integrity, 
                    string BehaviourScoreTotal, 
                    string elearning, 
                    string kssattendance, 
                    string coaching, 
                    string learning_total, 
                    string overall_Total, 
                    string casa, 
                    string risk_asset, 
                    string deposit, 
                    string costoffund, 
                    string cutomeraccount, 
                    string eproducts, 
                    string FinancialTotals) {
            base.Channel.UpdateStaffAppraisal(Staff_Number, staffName, grade, Groups, JobKnowledge, AnalyticalSkills, complianceKnowledge, serviceDelivery, prodKnowledge, TotalScoreTechnical, WorkHandled, Accuracy, Intiative, Takingownership, Turnaroundtime, feedback, processTotal, Appearance, Temperament, Communication, Punctuality, Integrity, BehaviourScoreTotal, elearning, kssattendance, coaching, learning_total, overall_Total, casa, risk_asset, deposit, costoffund, cutomeraccount, eproducts, FinancialTotals);
        }
        
        public System.Threading.Tasks.Task UpdateStaffAppraisalAsync(
                    string Staff_Number, 
                    string staffName, 
                    string grade, 
                    string Groups, 
                    string JobKnowledge, 
                    string AnalyticalSkills, 
                    string complianceKnowledge, 
                    string serviceDelivery, 
                    string prodKnowledge, 
                    string TotalScoreTechnical, 
                    string WorkHandled, 
                    string Accuracy, 
                    string Intiative, 
                    string Takingownership, 
                    string Turnaroundtime, 
                    string feedback, 
                    string processTotal, 
                    string Appearance, 
                    string Temperament, 
                    string Communication, 
                    string Punctuality, 
                    string Integrity, 
                    string BehaviourScoreTotal, 
                    string elearning, 
                    string kssattendance, 
                    string coaching, 
                    string learning_total, 
                    string overall_Total, 
                    string casa, 
                    string risk_asset, 
                    string deposit, 
                    string costoffund, 
                    string cutomeraccount, 
                    string eproducts, 
                    string FinancialTotals) {
            return base.Channel.UpdateStaffAppraisalAsync(Staff_Number, staffName, grade, Groups, JobKnowledge, AnalyticalSkills, complianceKnowledge, serviceDelivery, prodKnowledge, TotalScoreTechnical, WorkHandled, Accuracy, Intiative, Takingownership, Turnaroundtime, feedback, processTotal, Appearance, Temperament, Communication, Punctuality, Integrity, BehaviourScoreTotal, elearning, kssattendance, coaching, learning_total, overall_Total, casa, risk_asset, deposit, costoffund, cutomeraccount, eproducts, FinancialTotals);
        }
        
        public string LogCEMPFormSubmit(string nuban, string productType, string comment) {
            return base.Channel.LogCEMPFormSubmit(nuban, productType, comment);
        }
        
        public System.Threading.Tasks.Task<string> LogCEMPFormSubmitAsync(string nuban, string productType, string comment) {
            return base.Channel.LogCEMPFormSubmitAsync(nuban, productType, comment);
        }
        
        public System.Data.DataSet getAcctFullInfo(string nuban) {
            return base.Channel.getAcctFullInfo(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAcctFullInfoAsync(string nuban) {
            return base.Channel.getAcctFullInfoAsync(nuban);
        }
        
        public void getPerfScoreEWS(string UserName, string dateUpdated, string staffName) {
            base.Channel.getPerfScoreEWS(UserName, dateUpdated, staffName);
        }
        
        public System.Threading.Tasks.Task getPerfScoreEWSAsync(string UserName, string dateUpdated, string staffName) {
            return base.Channel.getPerfScoreEWSAsync(UserName, dateUpdated, staffName);
        }
        
        public string getLedgerswithDocuments(string ledCode, string acctCat) {
            return base.Channel.getLedgerswithDocuments(ledCode, acctCat);
        }
        
        public System.Threading.Tasks.Task<string> getLedgerswithDocumentsAsync(string ledCode, string acctCat) {
            return base.Channel.getLedgerswithDocumentsAsync(ledCode, acctCat);
        }
        
        public string GetUserIDForCardRequest(string adUsername) {
            return base.Channel.GetUserIDForCardRequest(adUsername);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDForCardRequestAsync(string adUsername) {
            return base.Channel.GetUserIDForCardRequestAsync(adUsername);
        }
        
        public System.Data.DataSet GetCardProducts() {
            return base.Channel.GetCardProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCardProductsAsync() {
            return base.Channel.GetCardProductsAsync();
        }
        
        public string SubmitCardRequest(
                    string BranchCode, 
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID) {
            return base.Channel.SubmitCardRequest(BranchCode, Customernumber, Currencycode, Ledgercode, CusName, Address, Phone, Cellphone, Email, Title, Sex, Cuscity, Cardmidname, Cusregion, Account, Cardfirstname, Cardsurname, Carddelivery, Pindelivery, PASNOM, Dateissued, PasExpDat, PasPlace, SecretQuer, SecretAnsw, Resident, CountryRes, CntryReg, RegionReg, CityReg, ResAddress, CntryLive, Birthday, GroupCmd, FinProf, productID, ChannelID);
        }
        
        public System.Threading.Tasks.Task<string> SubmitCardRequestAsync(
                    string BranchCode, 
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID) {
            return base.Channel.SubmitCardRequestAsync(BranchCode, Customernumber, Currencycode, Ledgercode, CusName, Address, Phone, Cellphone, Email, Title, Sex, Cuscity, Cardmidname, Cusregion, Account, Cardfirstname, Cardsurname, Carddelivery, Pindelivery, PASNOM, Dateissued, PasExpDat, PasPlace, SecretQuer, SecretAnsw, Resident, CountryRes, CntryReg, RegionReg, CityReg, ResAddress, CntryLive, Birthday, GroupCmd, FinProf, productID, ChannelID);
        }
        
        public System.Data.DataSet checkWatchList(string FN, string LN) {
            return base.Channel.checkWatchList(FN, LN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN, string LN) {
            return base.Channel.checkWatchListAsync(FN, LN);
        }
        
        public int insertCardRequest(string bra_code, string cus_num, string cur_code, string cus_sho_name, string led_code, string nuban, string ACCT_TYPE, string NAME_LINE1, string NAME_LINE2, string ADD_LINE1, string EMAIL, string MOB_NUM, string BIR_DATE) {
            return base.Channel.insertCardRequest(bra_code, cus_num, cur_code, cus_sho_name, led_code, nuban, ACCT_TYPE, NAME_LINE1, NAME_LINE2, ADD_LINE1, EMAIL, MOB_NUM, BIR_DATE);
        }
        
        public System.Threading.Tasks.Task<int> insertCardRequestAsync(string bra_code, string cus_num, string cur_code, string cus_sho_name, string led_code, string nuban, string ACCT_TYPE, string NAME_LINE1, string NAME_LINE2, string ADD_LINE1, string EMAIL, string MOB_NUM, string BIR_DATE) {
            return base.Channel.insertCardRequestAsync(bra_code, cus_num, cur_code, cus_sho_name, led_code, nuban, ACCT_TYPE, NAME_LINE1, NAME_LINE2, ADD_LINE1, EMAIL, MOB_NUM, BIR_DATE);
        }
    }
}
