//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoubbleAdmin.LDAP {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LDAP.ldapSoap")]
    public interface ldapSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetInfo(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetInfoAsync(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetInfo2(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetInfo2", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetInfo2Async(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/login", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> loginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUserName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool checkUserName(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkUserName", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> checkUserNameAsync(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable searchUsers(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchUsersAsync(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchAgents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable searchAgents(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchAgents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchAgentsAsync(string xusername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersByGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable searchUsersByGroup(string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersByGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchUsersByGroupAsync(string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersByStaffID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable searchUsersByStaffID(string staffid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersByStaffID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchUsersByStaffIDAsync(string staffid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersAll", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable searchUsersAll(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/searchUsersAll", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> searchUsersAllAsync(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ldapSoapChannel : DoubbleAdmin.LDAP.ldapSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ldapSoapClient : System.ServiceModel.ClientBase<DoubbleAdmin.LDAP.ldapSoap>, DoubbleAdmin.LDAP.ldapSoap {
        
        public ldapSoapClient() {
        }
        
        public ldapSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ldapSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ldapSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ldapSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetInfo(string xusername) {
            return base.Channel.GetInfo(xusername);
        }
        
        public System.Threading.Tasks.Task<string> GetInfoAsync(string xusername) {
            return base.Channel.GetInfoAsync(xusername);
        }
        
        public string GetInfo2(string xusername) {
            return base.Channel.GetInfo2(xusername);
        }
        
        public System.Threading.Tasks.Task<string> GetInfo2Async(string xusername) {
            return base.Channel.GetInfo2Async(xusername);
        }
        
        public bool login(string username, string password) {
            return base.Channel.login(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string username, string password) {
            return base.Channel.loginAsync(username, password);
        }
        
        public bool checkUserName(string xusername) {
            return base.Channel.checkUserName(xusername);
        }
        
        public System.Threading.Tasks.Task<bool> checkUserNameAsync(string xusername) {
            return base.Channel.checkUserNameAsync(xusername);
        }
        
        public System.Data.DataTable searchUsers(string xusername) {
            return base.Channel.searchUsers(xusername);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchUsersAsync(string xusername) {
            return base.Channel.searchUsersAsync(xusername);
        }
        
        public System.Data.DataTable searchAgents(string xusername) {
            return base.Channel.searchAgents(xusername);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchAgentsAsync(string xusername) {
            return base.Channel.searchAgentsAsync(xusername);
        }
        
        public System.Data.DataTable searchUsersByGroup(string group) {
            return base.Channel.searchUsersByGroup(group);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchUsersByGroupAsync(string group) {
            return base.Channel.searchUsersByGroupAsync(group);
        }
        
        public System.Data.DataTable searchUsersByStaffID(string staffid) {
            return base.Channel.searchUsersByStaffID(staffid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchUsersByStaffIDAsync(string staffid) {
            return base.Channel.searchUsersByStaffIDAsync(staffid);
        }
        
        public System.Data.DataTable searchUsersAll(string text) {
            return base.Channel.searchUsersAll(text);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> searchUsersAllAsync(string text) {
            return base.Channel.searchUsersAllAsync(text);
        }
    }
}
