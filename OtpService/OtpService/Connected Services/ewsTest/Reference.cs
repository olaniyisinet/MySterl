//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OtpService.ewsTest {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ewsTest.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailWithHeader", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendEmailWithHeader(string subject, string subbody, string recipient, string from, string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendEmailWithHeader", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendEmailWithHeaderAsync(string subject, string subbody, string recipient, string from, string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet checkWatchList(string FN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPerfScoreEWS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void getPerfScoreEWS(string UserName, string dateUpdated, string staffName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getPerfScoreEWS", ReplyAction="*")]
        System.Threading.Tasks.Task getPerfScoreEWSAsync(string UserName, string dateUpdated, string staffName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByCorporate(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeTemplateNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeStateCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDepartmentAccountCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDepartmentAccountCodes(string braCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDepartmentAccountCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDepartmentAccountCodesAsync(string braCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewwelcomeMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NewwelcomeMessages(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewwelcomeMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NewwelcomeMessagesAsync(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessageEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendWelcomeMessageEmail(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessageEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendWelcomeMessageEmailAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessages", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendWelcomeMessages(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendWelcomeMessages", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendWelcomeMessagesAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHumanManagerData(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerPayGroup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHumanManagerPayGroup(string pay_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerPayGroup", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerPayGroupAsync(string pay_group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetails(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBranchCodeForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTellerForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAccount(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateIndividualCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateIndividualCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatesStaffCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreatesStaffCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatesStaffCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreatesStaffCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDao", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ValidateDao(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateDao", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ValidateDaoAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateCorporateCustomer(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomerAsync(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getMobiledocs(string acct_cat, OtpService.ewsTest.sms smsUpdate, string acct_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getMobiledocs", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getMobiledocsAsync(string acct_cat, OtpService.ewsTest.sms smsUpdate, string acct_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateCorporateCustomer2(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string sr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCorporateCustomer2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomer2Async(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string sr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CreateAssociationCustomer(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateAssociationCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerDetails(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDAOCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetDAOCodes(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDAOCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDAOCodesAsync(string branchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIntroducerCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIntroducerCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIntroducerCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIntroducerCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCurrencies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCurrenciesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/validateBvn", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string validateBvn(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/validateBvn", ReplyAction="*")]
        System.Threading.Tasks.Task<string> validateBvnAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTitle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStates", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertIntoInfobip", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertIntoInfobip(string msg, string msdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertIntoInfobip", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertIntoInfobipAsync(string msg, string msdn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeCemgApprasalScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ComputeCemgApprasalScore(string StaffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeCemgApprasalScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComputeCemgApprasalScoreAsync(string StaffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeRetailsScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ComputeRetailsScore(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ComputeRetailsScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComputeRetailsScoreAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStaffAppraisalScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int updateStaffAppraisalScore(string staffNumber, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateStaffAppraisalScore", ReplyAction="*")]
        System.Threading.Tasks.Task<int> updateStaffAppraisalScoreAsync(string staffNumber, string stat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStaffDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int insertStaffDetails(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/insertStaffDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<int> insertStaffDetailsAsync(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLearningScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLearningScore(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLearningScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLearningScoreAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRetailsScore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetRetailsScore(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRetailsScore", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRetailsScoreAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStaffCat(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffCat", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStaffCatAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCemgStaffAppraisal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UpdateCemgStaffAppraisal(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCemgStaffAppraisal", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UpdateCemgStaffAppraisalAsync(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerClassification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBVN(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBankName(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMail(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendMailNewServer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool sendMailNewServer(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/sendMailNewServer", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> sendMailNewServerAsync(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename);
        
        // CODEGEN: Parameter 'attachmentData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailWithAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OtpService.ewsTest.SendMailWithAttachmentResponse SendMailWithAttachment(OtpService.ewsTest.SendMailWithAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailWithAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<OtpService.ewsTest.SendMailWithAttachmentResponse> SendMailWithAttachmentAsync(OtpService.ewsTest.SendMailWithAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetailsByID(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByIDAsync(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogAccountRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogAccountRecord(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogAccountRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogAccountRecordAsync(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateAccountRecord(string nuban, OtpService.ewsTest.ProcessingState state, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateAccountRecord", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateAccountRecordAsync(string nuban, OtpService.ewsTest.ProcessingState state, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCEMPFormSubmit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogCEMPFormSubmit(string nuban, string productType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCEMPFormSubmit", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogCEMPFormSubmitAsync(string nuban, string productType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCAOUDelivery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string LogCAOUDelivery(string nuban, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LogCAOUDelivery", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LogCAOUDeliveryAsync(string nuban, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetailsByEmail(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTextToPhoneNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SendTextToPhoneNumber(string message, string phoneNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTextToPhoneNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SendTextToPhoneNumberAsync(string message, string phoneNumber);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class sms : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string aOFField;
        
        private string mIDField;
        
        private string lCVField;
        
        private string ppField;
        
        private string mandateFormField;
        
        private string ubField;
        
        private string srField;
        
        private string bcField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AOF {
            get {
                return this.aOFField;
            }
            set {
                this.aOFField = value;
                this.RaisePropertyChanged("AOF");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MID {
            get {
                return this.mIDField;
            }
            set {
                this.mIDField = value;
                this.RaisePropertyChanged("MID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LCV {
            get {
                return this.lCVField;
            }
            set {
                this.lCVField = value;
                this.RaisePropertyChanged("LCV");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string pp {
            get {
                return this.ppField;
            }
            set {
                this.ppField = value;
                this.RaisePropertyChanged("pp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MandateForm {
            get {
                return this.mandateFormField;
            }
            set {
                this.mandateFormField = value;
                this.RaisePropertyChanged("MandateForm");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string UB {
            get {
                return this.ubField;
            }
            set {
                this.ubField = value;
                this.RaisePropertyChanged("UB");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SR {
            get {
                return this.srField;
            }
            set {
                this.srField = value;
                this.RaisePropertyChanged("SR");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string BC {
            get {
                return this.bcField;
            }
            set {
                this.bcField = value;
                this.RaisePropertyChanged("BC");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendMailWithAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string destinationEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sourceEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ccEmailSeparatedByComma;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] attachmentData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string attachmentFilename;
        
        public SendMailWithAttachmentRequest() {
        }
        
        public SendMailWithAttachmentRequest(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            this.destinationEmail = destinationEmail;
            this.sourceEmail = sourceEmail;
            this.body = body;
            this.subject = subject;
            this.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            this.attachmentData = attachmentData;
            this.attachmentFilename = attachmentFilename;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachmentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendMailWithAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SendMailWithAttachmentResult;
        
        public SendMailWithAttachmentResponse() {
        }
        
        public SendMailWithAttachmentResponse(string SendMailWithAttachmentResult) {
            this.SendMailWithAttachmentResult = SendMailWithAttachmentResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ProcessingState {
        
        /// <remarks/>
        AccountCreated,
        
        /// <remarks/>
        FormSubmission,
        
        /// <remarks/>
        FormSubmitted,
        
        /// <remarks/>
        PhysicalFormTransport,
        
        /// <remarks/>
        FormReceived,
        
        /// <remarks/>
        ADAUpload,
        
        /// <remarks/>
        CPCInputter,
        
        /// <remarks/>
        LegalVerfication,
        
        /// <remarks/>
        CPCVerifier,
        
        /// <remarks/>
        CPCLogistics,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : OtpService.ewsTest.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<OtpService.ewsTest.ServiceSoap>, OtpService.ewsTest.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendEmailWithHeader(string subject, string subbody, string recipient, string from, string cc) {
            return base.Channel.SendEmailWithHeader(subject, subbody, recipient, from, cc);
        }
        
        public System.Threading.Tasks.Task<string> SendEmailWithHeaderAsync(string subject, string subbody, string recipient, string from, string cc) {
            return base.Channel.SendEmailWithHeaderAsync(subject, subbody, recipient, from, cc);
        }
        
        public System.Data.DataSet checkWatchList(string FN) {
            return base.Channel.checkWatchList(FN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN) {
            return base.Channel.checkWatchListAsync(FN);
        }
        
        public void getPerfScoreEWS(string UserName, string dateUpdated, string staffName) {
            base.Channel.getPerfScoreEWS(UserName, dateUpdated, staffName);
        }
        
        public System.Threading.Tasks.Task getPerfScoreEWSAsync(string UserName, string dateUpdated, string staffName) {
            return base.Channel.getPerfScoreEWSAsync(UserName, dateUpdated, staffName);
        }
        
        public System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByName(lastname, firstname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByNameAsync(lastname, firstname);
        }
        
        public System.Data.DataSet SearchExistingCustomerByCorporate(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporate(fullname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporateAsync(fullname);
        }
        
        public System.Data.DataSet GetChequeTemplateNames() {
            return base.Channel.GetChequeTemplateNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync() {
            return base.Channel.GetChequeTemplateNamesAsync();
        }
        
        public System.Data.DataSet GetChequeStateCodes() {
            return base.Channel.GetChequeStateCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync() {
            return base.Channel.GetChequeStateCodesAsync();
        }
        
        public System.Data.DataSet GetDepartmentAccountCodes(string braCode) {
            return base.Channel.GetDepartmentAccountCodes(braCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDepartmentAccountCodesAsync(string braCode) {
            return base.Channel.GetDepartmentAccountCodesAsync(braCode);
        }
        
        public string SendSMS(string message, string gsm) {
            return base.Channel.SendSMS(message, gsm);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm) {
            return base.Channel.SendSMSAsync(message, gsm);
        }
        
        public string NewwelcomeMessages(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch) {
            return base.Channel.NewwelcomeMessages(customerID, accountNumber, acctcat, ledgerCode, customerName, branch);
        }
        
        public System.Threading.Tasks.Task<string> NewwelcomeMessagesAsync(string customerID, string accountNumber, string acctcat, string ledgerCode, string customerName, string branch) {
            return base.Channel.NewwelcomeMessagesAsync(customerID, accountNumber, acctcat, ledgerCode, customerName, branch);
        }
        
        public string SendWelcomeMessageEmail(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessageEmail(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public System.Threading.Tasks.Task<string> SendWelcomeMessageEmailAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessageEmailAsync(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public string SendWelcomeMessages(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessages(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public System.Threading.Tasks.Task<string> SendWelcomeMessagesAsync(
                    string customerID, 
                    string accountNo, 
                    string customerClass, 
                    string accountType, 
                    string gsm, 
                    string email, 
                    string aof, 
                    string mid, 
                    string ub, 
                    string lv, 
                    string ls, 
                    string ci, 
                    string fr, 
                    string sr, 
                    string mf, 
                    string br, 
                    string co2, 
                    string co7, 
                    string lso, 
                    string sp, 
                    string tpi, 
                    string mift, 
                    string bc, 
                    string pp) {
            return base.Channel.SendWelcomeMessagesAsync(customerID, accountNo, customerClass, accountType, gsm, email, aof, mid, ub, lv, ls, ci, fr, sr, mf, br, co2, co7, lso, sp, tpi, mift, bc, pp);
        }
        
        public string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequest(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequestAsync(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public System.Data.DataSet GetHumanManagerData(string staffNumber) {
            return base.Channel.GetHumanManagerData(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber) {
            return base.Channel.GetHumanManagerDataAsync(staffNumber);
        }
        
        public System.Data.DataSet GetHumanManagerPayGroup(string pay_group) {
            return base.Channel.GetHumanManagerPayGroup(pay_group);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerPayGroupAsync(string pay_group) {
            return base.Channel.GetHumanManagerPayGroupAsync(pay_group);
        }
        
        public System.Data.DataSet GetADDetails(string username) {
            return base.Channel.GetADDetails(username);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username) {
            return base.Channel.GetADDetailsAsync(username);
        }
        
        public string GetBranchCodeForUser(string username) {
            return base.Channel.GetBranchCodeForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username) {
            return base.Channel.GetBranchCodeForUserAsync(username);
        }
        
        public string GetTellerForUser(string username) {
            return base.Channel.GetTellerForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username) {
            return base.Channel.GetTellerForUserAsync(username);
        }
        
        public System.Data.DataSet CreateAccount(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName) {
            return base.Channel.CreateAccount(customerId, braCode, curCode, productCode, tellUsername, acctMgr, applyPND, acctName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAccountAsync(string customerId, string braCode, string curCode, string productCode, string tellUsername, string acctMgr, string applyPND, string acctName) {
            return base.Channel.CreateAccountAsync(customerId, braCode, curCode, productCode, tellUsername, acctMgr, applyPND, acctName);
        }
        
        public System.Data.DataSet CreateIndividualCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreateIndividualCustomer(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateIndividualCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreateIndividualCustomerAsync(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public System.Data.DataSet CreatesStaffCustomer(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreatesStaffCustomer(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreatesStaffCustomerAsync(
                    string tellUsername, 
                    string title, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string dob, 
                    string gender, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string state) {
            return base.Channel.CreatesStaffCustomerAsync(tellUsername, title, firstName, middleName, lastName, dob, gender, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, state);
        }
        
        public string ValidateDao(string Code) {
            return base.Channel.ValidateDao(Code);
        }
        
        public System.Threading.Tasks.Task<string> ValidateDaoAsync(string Code) {
            return base.Channel.ValidateDaoAsync(Code);
        }
        
        public System.Data.DataSet CreateCorporateCustomer(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state) {
            return base.Channel.CreateCorporateCustomer(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin, state);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomerAsync(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state) {
            return base.Channel.CreateCorporateCustomerAsync(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin, state);
        }
        
        public string getMobiledocs(string acct_cat, OtpService.ewsTest.sms smsUpdate, string acct_Type) {
            return base.Channel.getMobiledocs(acct_cat, smsUpdate, acct_Type);
        }
        
        public System.Threading.Tasks.Task<string> getMobiledocsAsync(string acct_cat, OtpService.ewsTest.sms smsUpdate, string acct_Type) {
            return base.Channel.getMobiledocsAsync(acct_cat, smsUpdate, acct_Type);
        }
        
        public System.Data.DataSet CreateCorporateCustomer2(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string sr) {
            return base.Channel.CreateCorporateCustomer2(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin, state, place, nature, sr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateCorporateCustomer2Async(
                    string tellUsername, 
                    string organisation, 
                    string incorporationDate, 
                    string rcNumber, 
                    string phone, 
                    string email, 
                    string address, 
                    string nationCode, 
                    string residence, 
                    string branchCode, 
                    string bvn, 
                    string DAOCode, 
                    string sectorCode, 
                    string industryCode, 
                    string targetCode, 
                    string introducerCode, 
                    string tin, 
                    string state, 
                    string place, 
                    string nature, 
                    string sr) {
            return base.Channel.CreateCorporateCustomer2Async(tellUsername, organisation, incorporationDate, rcNumber, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode, tin, state, place, nature, sr);
        }
        
        public System.Data.DataSet CreateAssociationCustomer(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode) {
            return base.Channel.CreateAssociationCustomer(tellUsername, organisation, incorporationDate, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CreateAssociationCustomerAsync(string tellUsername, string organisation, string incorporationDate, string phone, string email, string address, string nationCode, string residence, string branchCode, string bvn, string DAOCode, string sectorCode, string industryCode, string targetCode, string introducerCode) {
            return base.Channel.CreateAssociationCustomerAsync(tellUsername, organisation, incorporationDate, phone, email, address, nationCode, residence, branchCode, bvn, DAOCode, sectorCode, industryCode, targetCode, introducerCode);
        }
        
        public System.Data.DataSet GetCustomerDetails(string customerId) {
            return base.Channel.GetCustomerDetails(customerId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerDetailsAsync(string customerId) {
            return base.Channel.GetCustomerDetailsAsync(customerId);
        }
        
        public System.Data.DataSet GetDAOCodes(string branchCode) {
            return base.Channel.GetDAOCodes(branchCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDAOCodesAsync(string branchCode) {
            return base.Channel.GetDAOCodesAsync(branchCode);
        }
        
        public System.Data.DataSet GetIntroducerCodes() {
            return base.Channel.GetIntroducerCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIntroducerCodesAsync() {
            return base.Channel.GetIntroducerCodesAsync();
        }
        
        public System.Data.DataSet GetCurrencies() {
            return base.Channel.GetCurrencies();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCurrenciesAsync() {
            return base.Channel.GetCurrenciesAsync();
        }
        
        public string validateBvn(string bvn) {
            return base.Channel.validateBvn(bvn);
        }
        
        public System.Threading.Tasks.Task<string> validateBvnAsync(string bvn) {
            return base.Channel.validateBvnAsync(bvn);
        }
        
        public System.Data.DataSet GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Data.DataSet GetTitle() {
            return base.Channel.GetTitle();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync() {
            return base.Channel.GetTitleAsync();
        }
        
        public System.Data.DataSet GetStates() {
            return base.Channel.GetStates();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStatesAsync() {
            return base.Channel.GetStatesAsync();
        }
        
        public int insertIntoInfobip(string msg, string msdn) {
            return base.Channel.insertIntoInfobip(msg, msdn);
        }
        
        public System.Threading.Tasks.Task<int> insertIntoInfobipAsync(string msg, string msdn) {
            return base.Channel.insertIntoInfobipAsync(msg, msdn);
        }
        
        public System.Data.DataSet ComputeCemgApprasalScore(string StaffNumber) {
            return base.Channel.ComputeCemgApprasalScore(StaffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComputeCemgApprasalScoreAsync(string StaffNumber) {
            return base.Channel.ComputeCemgApprasalScoreAsync(StaffNumber);
        }
        
        public System.Data.DataSet ComputeRetailsScore(string staffNumber) {
            return base.Channel.ComputeRetailsScore(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComputeRetailsScoreAsync(string staffNumber) {
            return base.Channel.ComputeRetailsScoreAsync(staffNumber);
        }
        
        public int updateStaffAppraisalScore(string staffNumber, string stat) {
            return base.Channel.updateStaffAppraisalScore(staffNumber, stat);
        }
        
        public System.Threading.Tasks.Task<int> updateStaffAppraisalScoreAsync(string staffNumber, string stat) {
            return base.Channel.updateStaffAppraisalScoreAsync(staffNumber, stat);
        }
        
        public int insertStaffDetails(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat) {
            return base.Channel.insertStaffDetails(staffNumber, businessGroup, TotScore, FN, LN, MN, Cat);
        }
        
        public System.Threading.Tasks.Task<int> insertStaffDetailsAsync(string staffNumber, string businessGroup, string TotScore, string FN, string LN, string MN, string Cat) {
            return base.Channel.insertStaffDetailsAsync(staffNumber, businessGroup, TotScore, FN, LN, MN, Cat);
        }
        
        public System.Data.DataSet GetLearningScore(string staffNumber) {
            return base.Channel.GetLearningScore(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLearningScoreAsync(string staffNumber) {
            return base.Channel.GetLearningScoreAsync(staffNumber);
        }
        
        public System.Data.DataSet GetRetailsScore(string staffNumber) {
            return base.Channel.GetRetailsScore(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRetailsScoreAsync(string staffNumber) {
            return base.Channel.GetRetailsScoreAsync(staffNumber);
        }
        
        public System.Data.DataSet GetStaffCat(string staffNumber) {
            return base.Channel.GetStaffCat(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStaffCatAsync(string staffNumber) {
            return base.Channel.GetStaffCatAsync(staffNumber);
        }
        
        public int UpdateCemgStaffAppraisal(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning) {
            return base.Channel.UpdateCemgStaffAppraisal(staffNumber, businessGroup, resolvedCompl, ccmsComp, branchServ, learning);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCemgStaffAppraisalAsync(string staffNumber, string businessGroup, string resolvedCompl, string ccmsComp, string branchServ, string learning) {
            return base.Channel.UpdateCemgStaffAppraisalAsync(staffNumber, businessGroup, resolvedCompl, ccmsComp, branchServ, learning);
        }
        
        public System.Data.DataSet GetBranches() {
            return base.Channel.GetBranches();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync() {
            return base.Channel.GetBranchesAsync();
        }
        
        public System.Data.DataSet GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public System.Data.DataSet GetCustomerClassification() {
            return base.Channel.GetCustomerClassification();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync() {
            return base.Channel.GetCustomerClassificationAsync();
        }
        
        public System.Data.DataSet GetBVN(string bvn) {
            return base.Channel.GetBVN(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn) {
            return base.Channel.GetBVNAsync(bvn);
        }
        
        public string GetBankName(string bankCode) {
            return base.Channel.GetBankName(bankCode);
        }
        
        public System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode) {
            return base.Channel.GetBankNameAsync(bankCode);
        }
        
        public string SendMail(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMail(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMailAsync(destinationEmail, sourceEmail, body, subject);
        }
        
        public bool sendMailNewServer(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename) {
            return base.Channel.sendMailNewServer(destinationEmail, sourceEmail, ccEmailAddress, body, subject, filename);
        }
        
        public System.Threading.Tasks.Task<bool> sendMailNewServerAsync(string destinationEmail, string sourceEmail, string ccEmailAddress, string body, string subject, string filename) {
            return base.Channel.sendMailNewServerAsync(destinationEmail, sourceEmail, ccEmailAddress, body, subject, filename);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OtpService.ewsTest.SendMailWithAttachmentResponse OtpService.ewsTest.ServiceSoap.SendMailWithAttachment(OtpService.ewsTest.SendMailWithAttachmentRequest request) {
            return base.Channel.SendMailWithAttachment(request);
        }
        
        public string SendMailWithAttachment(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            OtpService.ewsTest.SendMailWithAttachmentRequest inValue = new OtpService.ewsTest.SendMailWithAttachmentRequest();
            inValue.destinationEmail = destinationEmail;
            inValue.sourceEmail = sourceEmail;
            inValue.body = body;
            inValue.subject = subject;
            inValue.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            inValue.attachmentData = attachmentData;
            inValue.attachmentFilename = attachmentFilename;
            OtpService.ewsTest.SendMailWithAttachmentResponse retVal = ((OtpService.ewsTest.ServiceSoap)(this)).SendMailWithAttachment(inValue);
            return retVal.SendMailWithAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OtpService.ewsTest.SendMailWithAttachmentResponse> OtpService.ewsTest.ServiceSoap.SendMailWithAttachmentAsync(OtpService.ewsTest.SendMailWithAttachmentRequest request) {
            return base.Channel.SendMailWithAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<OtpService.ewsTest.SendMailWithAttachmentResponse> SendMailWithAttachmentAsync(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            OtpService.ewsTest.SendMailWithAttachmentRequest inValue = new OtpService.ewsTest.SendMailWithAttachmentRequest();
            inValue.destinationEmail = destinationEmail;
            inValue.sourceEmail = sourceEmail;
            inValue.body = body;
            inValue.subject = subject;
            inValue.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            inValue.attachmentData = attachmentData;
            inValue.attachmentFilename = attachmentFilename;
            return ((OtpService.ewsTest.ServiceSoap)(this)).SendMailWithAttachmentAsync(inValue);
        }
        
        public System.Data.DataSet GetADDetailsByID(string StaffID) {
            return base.Channel.GetADDetailsByID(StaffID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByIDAsync(string StaffID) {
            return base.Channel.GetADDetailsByIDAsync(StaffID);
        }
        
        public string LogAccountRecord(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType) {
            return base.Channel.LogAccountRecord(braCode, nuban, region, fullAcctNo, customerName, cemp, productType);
        }
        
        public System.Threading.Tasks.Task<string> LogAccountRecordAsync(string braCode, string nuban, string region, string fullAcctNo, string customerName, string cemp, string productType) {
            return base.Channel.LogAccountRecordAsync(braCode, nuban, region, fullAcctNo, customerName, cemp, productType);
        }
        
        public string UpdateAccountRecord(string nuban, OtpService.ewsTest.ProcessingState state, string comment) {
            return base.Channel.UpdateAccountRecord(nuban, state, comment);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAccountRecordAsync(string nuban, OtpService.ewsTest.ProcessingState state, string comment) {
            return base.Channel.UpdateAccountRecordAsync(nuban, state, comment);
        }
        
        public string LogCEMPFormSubmit(string nuban, string productType, string comment) {
            return base.Channel.LogCEMPFormSubmit(nuban, productType, comment);
        }
        
        public System.Threading.Tasks.Task<string> LogCEMPFormSubmitAsync(string nuban, string productType, string comment) {
            return base.Channel.LogCEMPFormSubmitAsync(nuban, productType, comment);
        }
        
        public string LogCAOUDelivery(string nuban, string comment) {
            return base.Channel.LogCAOUDelivery(nuban, comment);
        }
        
        public System.Threading.Tasks.Task<string> LogCAOUDeliveryAsync(string nuban, string comment) {
            return base.Channel.LogCAOUDeliveryAsync(nuban, comment);
        }
        
        public System.Data.DataSet GetADDetailsByEmail(string emailAddress) {
            return base.Channel.GetADDetailsByEmail(emailAddress);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string emailAddress) {
            return base.Channel.GetADDetailsByEmailAsync(emailAddress);
        }
        
        public int SendTextToPhoneNumber(string message, string phoneNumber) {
            return base.Channel.SendTextToPhoneNumber(message, phoneNumber);
        }
        
        public System.Threading.Tasks.Task<int> SendTextToPhoneNumberAsync(string message, string phoneNumber) {
            return base.Channel.SendTextToPhoneNumberAsync(message, phoneNumber);
        }
    }
}
