//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OtpService.MailSenderService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MailSenderService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchExistingCustomerByCorporate(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchExistingCustomerByCorporate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getNuban(string bracode, string cusnum, string curcode, string ledcode, string subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getNubanAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowCustomerDetailsByPartyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ShowCustomerDetailsByPartyID(string partyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ShowCustomerDetailsByPartyID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ShowCustomerDetailsByPartyIDAsync(string partyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVisaRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveVisaRequest(
                    string nuban, 
                    string telephone, 
                    string gsm, 
                    string email, 
                    string namePrefix, 
                    string gender, 
                    string passportNum, 
                    string passportIssuedate, 
                    string passportExpirydate, 
                    string passportPlaceofIssue, 
                    string secretQuestion, 
                    string secretAnswer, 
                    int resident, 
                    int countryResident, 
                    int billingCountry, 
                    int billingRegion, 
                    int billingCityofReg, 
                    string billingAddress, 
                    int homeCountry, 
                    int homeRegion, 
                    int homeCity, 
                    string homeAddress, 
                    string addedBy, 
                    string cardFirstName, 
                    string cardSurname, 
                    string dob, 
                    string carddeliveryverve, 
                    string pinDeliveryVerve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVisaRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveVisaRequestAsync(
                    string nuban, 
                    string telephone, 
                    string gsm, 
                    string email, 
                    string namePrefix, 
                    string gender, 
                    string passportNum, 
                    string passportIssuedate, 
                    string passportExpirydate, 
                    string passportPlaceofIssue, 
                    string secretQuestion, 
                    string secretAnswer, 
                    int resident, 
                    int countryResident, 
                    int billingCountry, 
                    int billingRegion, 
                    int billingCityofReg, 
                    string billingAddress, 
                    int homeCountry, 
                    int homeRegion, 
                    int homeCity, 
                    string homeAddress, 
                    string addedBy, 
                    string cardFirstName, 
                    string cardSurname, 
                    string dob, 
                    string carddeliveryverve, 
                    string pinDeliveryVerve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveChequeBookRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsVerveCardExisting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsVerveCardExisting(string cusNum, string ledCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsVerveCardExisting", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsVerveCardExistingAsync(string cusNum, string ledCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsVerveCardExistingNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsVerveCardExistingNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsVerveCardExistingNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsVerveCardExistingNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeTemplateNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeTemplateNames", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetChequeStateCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetChequeStateCodes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BasicOpening", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BasicOpening(string FirstName, string LastName, string OtherName, string Gender, string Mobile, string Email, string Title, string HomeAddress, string HomeState, string BirthDate, string DocumentReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BasicOpening", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BasicOpeningAsync(string FirstName, string LastName, string OtherName, string Gender, string Mobile, string Email, string Title, string HomeAddress, string HomeState, string BirthDate, string DocumentReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBranches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranches", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendSMS(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendSMS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveInstantCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveVerveCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPNDExisting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsPNDExisting(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPNDExisting", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsPNDExistingAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPNDExistingByNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsPNDExistingByNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsPNDExistingByNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsPNDExistingByNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsKYCComplete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsKYCComplete(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsKYCComplete", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsKYCCompleteAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsKYCCompleteByNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsKYCCompleteByNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsKYCCompleteByNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsKYCCompleteByNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetKYCStatus(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetKYCStatusAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCStatusNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetKYCStatusNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCStatusNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetKYCStatusNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetailsByNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKYCDetailsByNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetailsByNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsByNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetKYCDetails(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKYCDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetHumanManagerData(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHumanManagerData", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetails(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetADDetailsByEmail(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetADDetailsByEmail", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePartyID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GeneratePartyID(string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePartyID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GeneratePartyIDAsync(string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByCus_Nums", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBankCustByCus_Nums(string cusNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByCus_Nums", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByCus_NumsAsync(string cusNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByCIF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByCIF(int cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByCIF", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByCIFAsync(int cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCusNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBankCusNum(string cusNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCusNum", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBankCusNumAsync(string cusNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutPND", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PutPND(string BRA_CODE, string CUS_NUM, string CUR_CODE, string LED_CODE, string SUB_ACCT_CODE, string TELL_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PutPND", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PutPNDAsync(string BRA_CODE, string CUS_NUM, string CUR_CODE, string LED_CODE, string SUB_ACCT_CODE, string TELL_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBranchCodeForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBranchCodeForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTellerForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTellerForUser", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTSSAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateTSSAccount(string braCode, string cusNum, string curCode, string ledCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateTSSAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateTSSAccountAsync(string braCode, string cusNum, string curCode, string ledCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateNewAccountForExistingCustomer(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerAsync(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomerPos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateNewAccountForExistingCustomerPos(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomerPos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerPosAsync(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomerNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateNewAccountForExistingCustomerNuban(string nuban, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewAccountForExistingCustomerNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerNubanAsync(string nuban, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewCustomerAndAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateNewCustomerAndAccount(
                    string TELL_USERNAME, 
                    string ADDRESS_LINE1, 
                    string ADDRESS_LINE2, 
                    string BIR_DATE_STR, 
                    string BRA_CODE, 
                    string ADDRESS_STATE_CODE, 
                    string COUNTRY_OF_RESIDENCE_CODE, 
                    string CUSTOMER_CLASSIFICATION_CODE, 
                    string CUSTOMER_NAME, 
                    string EMAIL, 
                    string GENDER, 
                    string CUR_CODE, 
                    string LED_CODE, 
                    string ACCT_NAT, 
                    string MOB_NUM, 
                    string FNAME, 
                    string MNAME, 
                    string LNAME, 
                    string NATIONALITY_CODE, 
                    string OLD_CUSTOMER_NUMBER, 
                    string LGA_OF_ORIGIN_CODE, 
                    string REG_NUM, 
                    string SOCIAL_SECURITY_NUM, 
                    string STATE_ORIGIN_CODE, 
                    string TITLE_CODE, 
                    string TOWN, 
                    string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateNewCustomerAndAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateNewCustomerAndAccountAsync(
                    string TELL_USERNAME, 
                    string ADDRESS_LINE1, 
                    string ADDRESS_LINE2, 
                    string BIR_DATE_STR, 
                    string BRA_CODE, 
                    string ADDRESS_STATE_CODE, 
                    string COUNTRY_OF_RESIDENCE_CODE, 
                    string CUSTOMER_CLASSIFICATION_CODE, 
                    string CUSTOMER_NAME, 
                    string EMAIL, 
                    string GENDER, 
                    string CUR_CODE, 
                    string LED_CODE, 
                    string ACCT_NAT, 
                    string MOB_NUM, 
                    string FNAME, 
                    string MNAME, 
                    string LNAME, 
                    string NATIONALITY_CODE, 
                    string OLD_CUSTOMER_NUMBER, 
                    string LGA_OF_ORIGIN_CODE, 
                    string REG_NUM, 
                    string SOCIAL_SECURITY_NUM, 
                    string STATE_ORIGIN_CODE, 
                    string TITLE_CODE, 
                    string TOWN, 
                    string APPLY_PND);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBranch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getBranch();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getBranch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getBranchAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBVN(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLedger", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLedger();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLedger", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLedgerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetTitle();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitle", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitleName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTitleName(string titleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTitleName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTitleNameAsync(string titleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetState", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetStateName(string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetStateNameAsync(string stateCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCountry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountry", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCountryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNationality", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetNationality();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNationality", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetNationalityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateOfOrigin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetStateOfOrigin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStateOfOrigin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStateOfOriginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLgaOrigin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetLgaOrigin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLgaOrigin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetLgaOriginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCustomerClassification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerClassification", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountNature", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountNature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountNature", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountNatureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetailsByNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountDetailsByNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetailsByNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetailsByNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertNubanToBanksFormat", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConvertNubanToBanksFormat(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConvertNubanToBanksFormat", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConvertNubanToBanksFormatAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountDetails(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetailsAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetails2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountDetails2(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountDetails2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetails2Async(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsTellerIDExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsTellerIDExists(string tellerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsTellerIDExists", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsTellerIDExistsAsync(string tellerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRegionalChannelCoordinatorUsernameForBranchCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getRegionalChannelCoordinatorUsernameForBranchCode(string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getRegionalChannelCoordinatorUsernameForBranchCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getRegionalChannelCoordinatorUsernameForBranchCodeAsync(string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isRegionalChannelCoordinatorForBranchCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string isRegionalChannelCoordinatorForBranchCode(string username, string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isRegionalChannelCoordinatorForBranchCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> isRegionalChannelCoordinatorForBranchCodeAsync(string username, string bracode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendMail(string destinationEmail, string sourceEmail, string body, string subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMail", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject);
        
        // CODEGEN: Parameter 'attachmentData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailWithAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        OtpService.MailSenderService.SendMailWithAttachmentResponse SendMailWithAttachment(OtpService.MailSenderService.SendMailWithAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailWithAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<OtpService.MailSenderService.SendMailWithAttachmentResponse> SendMailWithAttachmentAsync(OtpService.MailSenderService.SendMailWithAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsTellerIDPasswordActive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsTellerIDPasswordActive(string tellerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsTellerIDPasswordActive", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsTellerIDPasswordActiveAsync(string tellerid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdDetailsByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAdDetailsByID(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAdDetailsByID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAdDetailsByIDAsync(string StaffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Numbergenerate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Numbergenerate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Numbergenerate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NumbergenerateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHighestRankedStaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetHighestRankedStaff(string[] staffusernames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHighestRankedStaff", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetHighestRankedStaffAsync(string[] staffusernames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllStaffGrade", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetAllStaffGrade(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllStaffGrade", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetAllStaffGradeAsync(string staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffGradeWithStaffID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetStaffGradeWithStaffID(string staffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStaffGradeWithStaffID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetStaffGradeWithStaffIDAsync(string staffID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByAcctNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByAcctNo(string cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByAcctNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByAcctNoAsync(string cif_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALCustByMobile(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALCustByMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByMobileAsync(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByNuban", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBankCustByNuban(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByNuban", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByNubanAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountsByMobileNo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetAccountsByMobileNo(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAccountsByMobileNo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAccountsByMobileNoAsync(string mobileNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByMobile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBankCustByMobile(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankCustByMobile", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByMobileAsync(string mobile_234_format, string mobile_080_format);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBankName(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetBankBVN(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetBankBVNAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALBVN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetIMALBVN(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIMALBVN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetIMALBVNAsync(string nuban);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckNUBANForComplaint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CheckNUBANForComplaint(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckNUBANForComplaint", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CheckNUBANForComplaintAsync(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullinfoAllForComplaint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAccountFullinfoAllForComplaint(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAccountFullinfoAllForComplaint", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullinfoAllForComplaintAsync(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckAcct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CheckAcct(string AccNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckAcct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CheckAcctAsync(string AccNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getClientsForIMAL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getClientsForIMAL(string rrr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getClientsForIMAL", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getClientsForIMALAsync(string rrr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckNUBANOmImal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CheckNUBANOmImal(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckNUBANOmImal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CheckNUBANOmImalAsync(string NUBAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcurrec", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getcurrec(string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getcurrec", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getcurrecAsync(string cc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctTypeFromBank", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAcctTypeFromBank(string bra_code, string cus_num, string cur_code, string led_code, string sub_led_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAcctTypeFromBank", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAcctTypeFromBankAsync(string bra_code, string cus_num, string cur_code, string led_code, string sub_led_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWorkflowTrackerExceptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] GetWorkflowTrackerExceptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetWorkflowTrackerExceptions", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> GetWorkflowTrackerExceptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsUserOnLeave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsUserOnLeave(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsUserOnLeave", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsUserOnLeaveAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDForCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetUserIDForCardRequest(string adUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserIDForCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetUserIDForCardRequestAsync(string adUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCardProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCardProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCardProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitCardRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SubmitCardRequest(
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitCardRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SubmitCardRequestAsync(
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet checkWatchList(string FN, string LN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/checkWatchList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN, string LN);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendMailWithAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string destinationEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string sourceEmail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string body;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string subject;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string ccEmailSeparatedByComma;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] attachmentData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string attachmentFilename;
        
        public SendMailWithAttachmentRequest() {
        }
        
        public SendMailWithAttachmentRequest(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            this.destinationEmail = destinationEmail;
            this.sourceEmail = sourceEmail;
            this.body = body;
            this.subject = subject;
            this.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            this.attachmentData = attachmentData;
            this.attachmentFilename = attachmentFilename;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendMailWithAttachmentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendMailWithAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SendMailWithAttachmentResult;
        
        public SendMailWithAttachmentResponse() {
        }
        
        public SendMailWithAttachmentResponse(string SendMailWithAttachmentResult) {
            this.SendMailWithAttachmentResult = SendMailWithAttachmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : OtpService.MailSenderService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<OtpService.MailSenderService.ServiceSoap>, OtpService.MailSenderService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet SearchExistingCustomerByName(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByName(lastname, firstname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByNameAsync(string lastname, string firstname) {
            return base.Channel.SearchExistingCustomerByNameAsync(lastname, firstname);
        }
        
        public System.Data.DataSet SearchExistingCustomerByCorporate(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporate(fullname);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchExistingCustomerByCorporateAsync(string fullname) {
            return base.Channel.SearchExistingCustomerByCorporateAsync(fullname);
        }
        
        public string getNuban(string bracode, string cusnum, string curcode, string ledcode, string subacctcode) {
            return base.Channel.getNuban(bracode, cusnum, curcode, ledcode, subacctcode);
        }
        
        public System.Threading.Tasks.Task<string> getNubanAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode) {
            return base.Channel.getNubanAsync(bracode, cusnum, curcode, ledcode, subacctcode);
        }
        
        public string ShowCustomerDetailsByPartyID(string partyID) {
            return base.Channel.ShowCustomerDetailsByPartyID(partyID);
        }
        
        public System.Threading.Tasks.Task<string> ShowCustomerDetailsByPartyIDAsync(string partyID) {
            return base.Channel.ShowCustomerDetailsByPartyIDAsync(partyID);
        }
        
        public string SaveVisaRequest(
                    string nuban, 
                    string telephone, 
                    string gsm, 
                    string email, 
                    string namePrefix, 
                    string gender, 
                    string passportNum, 
                    string passportIssuedate, 
                    string passportExpirydate, 
                    string passportPlaceofIssue, 
                    string secretQuestion, 
                    string secretAnswer, 
                    int resident, 
                    int countryResident, 
                    int billingCountry, 
                    int billingRegion, 
                    int billingCityofReg, 
                    string billingAddress, 
                    int homeCountry, 
                    int homeRegion, 
                    int homeCity, 
                    string homeAddress, 
                    string addedBy, 
                    string cardFirstName, 
                    string cardSurname, 
                    string dob, 
                    string carddeliveryverve, 
                    string pinDeliveryVerve) {
            return base.Channel.SaveVisaRequest(nuban, telephone, gsm, email, namePrefix, gender, passportNum, passportIssuedate, passportExpirydate, passportPlaceofIssue, secretQuestion, secretAnswer, resident, countryResident, billingCountry, billingRegion, billingCityofReg, billingAddress, homeCountry, homeRegion, homeCity, homeAddress, addedBy, cardFirstName, cardSurname, dob, carddeliveryverve, pinDeliveryVerve);
        }
        
        public System.Threading.Tasks.Task<string> SaveVisaRequestAsync(
                    string nuban, 
                    string telephone, 
                    string gsm, 
                    string email, 
                    string namePrefix, 
                    string gender, 
                    string passportNum, 
                    string passportIssuedate, 
                    string passportExpirydate, 
                    string passportPlaceofIssue, 
                    string secretQuestion, 
                    string secretAnswer, 
                    int resident, 
                    int countryResident, 
                    int billingCountry, 
                    int billingRegion, 
                    int billingCityofReg, 
                    string billingAddress, 
                    int homeCountry, 
                    int homeRegion, 
                    int homeCity, 
                    string homeAddress, 
                    string addedBy, 
                    string cardFirstName, 
                    string cardSurname, 
                    string dob, 
                    string carddeliveryverve, 
                    string pinDeliveryVerve) {
            return base.Channel.SaveVisaRequestAsync(nuban, telephone, gsm, email, namePrefix, gender, passportNum, passportIssuedate, passportExpirydate, passportPlaceofIssue, secretQuestion, secretAnswer, resident, countryResident, billingCountry, billingRegion, billingCityofReg, billingAddress, homeCountry, homeRegion, homeCity, homeAddress, addedBy, cardFirstName, cardSurname, dob, carddeliveryverve, pinDeliveryVerve);
        }
        
        public string SaveChequeBookRequest(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequest(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public System.Threading.Tasks.Task<string> SaveChequeBookRequestAsync(string nuban, int booklets, int statec, int branchCode, string branchName, int deliveryBranchCode, string chequeName, int chequeSN) {
            return base.Channel.SaveChequeBookRequestAsync(nuban, booklets, statec, branchCode, branchName, deliveryBranchCode, chequeName, chequeSN);
        }
        
        public string IsVerveCardExisting(string cusNum, string ledCode) {
            return base.Channel.IsVerveCardExisting(cusNum, ledCode);
        }
        
        public System.Threading.Tasks.Task<string> IsVerveCardExistingAsync(string cusNum, string ledCode) {
            return base.Channel.IsVerveCardExistingAsync(cusNum, ledCode);
        }
        
        public string IsVerveCardExistingNuban(string nuban) {
            return base.Channel.IsVerveCardExistingNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<string> IsVerveCardExistingNubanAsync(string nuban) {
            return base.Channel.IsVerveCardExistingNubanAsync(nuban);
        }
        
        public System.Data.DataSet GetChequeTemplateNames() {
            return base.Channel.GetChequeTemplateNames();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeTemplateNamesAsync() {
            return base.Channel.GetChequeTemplateNamesAsync();
        }
        
        public System.Data.DataSet GetChequeStateCodes() {
            return base.Channel.GetChequeStateCodes();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetChequeStateCodesAsync() {
            return base.Channel.GetChequeStateCodesAsync();
        }
        
        public string BasicOpening(string FirstName, string LastName, string OtherName, string Gender, string Mobile, string Email, string Title, string HomeAddress, string HomeState, string BirthDate, string DocumentReference) {
            return base.Channel.BasicOpening(FirstName, LastName, OtherName, Gender, Mobile, Email, Title, HomeAddress, HomeState, BirthDate, DocumentReference);
        }
        
        public System.Threading.Tasks.Task<string> BasicOpeningAsync(string FirstName, string LastName, string OtherName, string Gender, string Mobile, string Email, string Title, string HomeAddress, string HomeState, string BirthDate, string DocumentReference) {
            return base.Channel.BasicOpeningAsync(FirstName, LastName, OtherName, Gender, Mobile, Email, Title, HomeAddress, HomeState, BirthDate, DocumentReference);
        }
        
        public System.Data.DataSet GetBranches() {
            return base.Channel.GetBranches();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBranchesAsync() {
            return base.Channel.GetBranchesAsync();
        }
        
        public string SendSMS(string message, string gsm) {
            return base.Channel.SendSMS(message, gsm);
        }
        
        public System.Threading.Tasks.Task<string> SendSMSAsync(string message, string gsm) {
            return base.Channel.SendSMSAsync(message, gsm);
        }
        
        public string SaveInstantCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveInstantCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveInstantCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string SaveVerveCardRequest(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequest(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public System.Threading.Tasks.Task<string> SaveVerveCardRequestAsync(string nuban, string city, string region, string cardDeliveryBranch, string pinDeliveryBranch) {
            return base.Channel.SaveVerveCardRequestAsync(nuban, city, region, cardDeliveryBranch, pinDeliveryBranch);
        }
        
        public string IsPNDExisting(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.IsPNDExisting(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<string> IsPNDExistingAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.IsPNDExistingAsync(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public string IsPNDExistingByNuban(string nuban) {
            return base.Channel.IsPNDExistingByNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<string> IsPNDExistingByNubanAsync(string nuban) {
            return base.Channel.IsPNDExistingByNubanAsync(nuban);
        }
        
        public string IsKYCComplete(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.IsKYCComplete(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<string> IsKYCCompleteAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.IsKYCCompleteAsync(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public string IsKYCCompleteByNuban(string nuban) {
            return base.Channel.IsKYCCompleteByNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<string> IsKYCCompleteByNubanAsync(string nuban) {
            return base.Channel.IsKYCCompleteByNubanAsync(nuban);
        }
        
        public string GetKYCStatus(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetKYCStatus(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<string> GetKYCStatusAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetKYCStatusAsync(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public string GetKYCStatusNuban(string nuban) {
            return base.Channel.GetKYCStatusNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<string> GetKYCStatusNubanAsync(string nuban) {
            return base.Channel.GetKYCStatusNubanAsync(nuban);
        }
        
        public System.Data.DataSet GetKYCDetailsByNuban(string nuban) {
            return base.Channel.GetKYCDetailsByNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsByNubanAsync(string nuban) {
            return base.Channel.GetKYCDetailsByNubanAsync(nuban);
        }
        
        public System.Data.DataSet GetKYCDetails(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetKYCDetails(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetKYCDetailsAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetKYCDetailsAsync(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Data.DataSet GetHumanManagerData(string staffNumber) {
            return base.Channel.GetHumanManagerData(staffNumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetHumanManagerDataAsync(string staffNumber) {
            return base.Channel.GetHumanManagerDataAsync(staffNumber);
        }
        
        public System.Data.DataSet GetADDetails(string username) {
            return base.Channel.GetADDetails(username);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsAsync(string username) {
            return base.Channel.GetADDetailsAsync(username);
        }
        
        public System.Data.DataSet GetADDetailsByEmail(string emailAddress) {
            return base.Channel.GetADDetailsByEmail(emailAddress);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetADDetailsByEmailAsync(string emailAddress) {
            return base.Channel.GetADDetailsByEmailAsync(emailAddress);
        }
        
        public string GeneratePartyID(string bracode) {
            return base.Channel.GeneratePartyID(bracode);
        }
        
        public System.Threading.Tasks.Task<string> GeneratePartyIDAsync(string bracode) {
            return base.Channel.GeneratePartyIDAsync(bracode);
        }
        
        public System.Data.DataSet GetBankCustByCus_Nums(string cusNum) {
            return base.Channel.GetBankCustByCus_Nums(cusNum);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByCus_NumsAsync(string cusNum) {
            return base.Channel.GetBankCustByCus_NumsAsync(cusNum);
        }
        
        public System.Data.DataSet GetIMALCustByCIF(int cif_no) {
            return base.Channel.GetIMALCustByCIF(cif_no);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByCIFAsync(int cif_no) {
            return base.Channel.GetIMALCustByCIFAsync(cif_no);
        }
        
        public System.Data.DataSet GetBankCusNum(string cusNum) {
            return base.Channel.GetBankCusNum(cusNum);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBankCusNumAsync(string cusNum) {
            return base.Channel.GetBankCusNumAsync(cusNum);
        }
        
        public string PutPND(string BRA_CODE, string CUS_NUM, string CUR_CODE, string LED_CODE, string SUB_ACCT_CODE, string TELL_ID) {
            return base.Channel.PutPND(BRA_CODE, CUS_NUM, CUR_CODE, LED_CODE, SUB_ACCT_CODE, TELL_ID);
        }
        
        public System.Threading.Tasks.Task<string> PutPNDAsync(string BRA_CODE, string CUS_NUM, string CUR_CODE, string LED_CODE, string SUB_ACCT_CODE, string TELL_ID) {
            return base.Channel.PutPNDAsync(BRA_CODE, CUS_NUM, CUR_CODE, LED_CODE, SUB_ACCT_CODE, TELL_ID);
        }
        
        public string GetBranchCodeForUser(string username) {
            return base.Channel.GetBranchCodeForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetBranchCodeForUserAsync(string username) {
            return base.Channel.GetBranchCodeForUserAsync(username);
        }
        
        public string GetTellerForUser(string username) {
            return base.Channel.GetTellerForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetTellerForUserAsync(string username) {
            return base.Channel.GetTellerForUserAsync(username);
        }
        
        public string CreateTSSAccount(string braCode, string cusNum, string curCode, string ledCode) {
            return base.Channel.CreateTSSAccount(braCode, cusNum, curCode, ledCode);
        }
        
        public System.Threading.Tasks.Task<string> CreateTSSAccountAsync(string braCode, string cusNum, string curCode, string ledCode) {
            return base.Channel.CreateTSSAccountAsync(braCode, cusNum, curCode, ledCode);
        }
        
        public string CreateNewAccountForExistingCustomer(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomer(BRA_CODE, CUS_NUM, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerAsync(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomerAsync(BRA_CODE, CUS_NUM, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public string CreateNewAccountForExistingCustomerPos(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomerPos(BRA_CODE, CUS_NUM, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerPosAsync(string BRA_CODE, string CUS_NUM, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomerPosAsync(BRA_CODE, CUS_NUM, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public string CreateNewAccountForExistingCustomerNuban(string nuban, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomerNuban(nuban, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewAccountForExistingCustomerNubanAsync(string nuban, string NEW_BRA_CODE, string NEW_CUR_CODE, string LED_CODE, string ACCT_NAT, string TELL_USERNAME, string APPLY_PND) {
            return base.Channel.CreateNewAccountForExistingCustomerNubanAsync(nuban, NEW_BRA_CODE, NEW_CUR_CODE, LED_CODE, ACCT_NAT, TELL_USERNAME, APPLY_PND);
        }
        
        public string CreateNewCustomerAndAccount(
                    string TELL_USERNAME, 
                    string ADDRESS_LINE1, 
                    string ADDRESS_LINE2, 
                    string BIR_DATE_STR, 
                    string BRA_CODE, 
                    string ADDRESS_STATE_CODE, 
                    string COUNTRY_OF_RESIDENCE_CODE, 
                    string CUSTOMER_CLASSIFICATION_CODE, 
                    string CUSTOMER_NAME, 
                    string EMAIL, 
                    string GENDER, 
                    string CUR_CODE, 
                    string LED_CODE, 
                    string ACCT_NAT, 
                    string MOB_NUM, 
                    string FNAME, 
                    string MNAME, 
                    string LNAME, 
                    string NATIONALITY_CODE, 
                    string OLD_CUSTOMER_NUMBER, 
                    string LGA_OF_ORIGIN_CODE, 
                    string REG_NUM, 
                    string SOCIAL_SECURITY_NUM, 
                    string STATE_ORIGIN_CODE, 
                    string TITLE_CODE, 
                    string TOWN, 
                    string APPLY_PND) {
            return base.Channel.CreateNewCustomerAndAccount(TELL_USERNAME, ADDRESS_LINE1, ADDRESS_LINE2, BIR_DATE_STR, BRA_CODE, ADDRESS_STATE_CODE, COUNTRY_OF_RESIDENCE_CODE, CUSTOMER_CLASSIFICATION_CODE, CUSTOMER_NAME, EMAIL, GENDER, CUR_CODE, LED_CODE, ACCT_NAT, MOB_NUM, FNAME, MNAME, LNAME, NATIONALITY_CODE, OLD_CUSTOMER_NUMBER, LGA_OF_ORIGIN_CODE, REG_NUM, SOCIAL_SECURITY_NUM, STATE_ORIGIN_CODE, TITLE_CODE, TOWN, APPLY_PND);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewCustomerAndAccountAsync(
                    string TELL_USERNAME, 
                    string ADDRESS_LINE1, 
                    string ADDRESS_LINE2, 
                    string BIR_DATE_STR, 
                    string BRA_CODE, 
                    string ADDRESS_STATE_CODE, 
                    string COUNTRY_OF_RESIDENCE_CODE, 
                    string CUSTOMER_CLASSIFICATION_CODE, 
                    string CUSTOMER_NAME, 
                    string EMAIL, 
                    string GENDER, 
                    string CUR_CODE, 
                    string LED_CODE, 
                    string ACCT_NAT, 
                    string MOB_NUM, 
                    string FNAME, 
                    string MNAME, 
                    string LNAME, 
                    string NATIONALITY_CODE, 
                    string OLD_CUSTOMER_NUMBER, 
                    string LGA_OF_ORIGIN_CODE, 
                    string REG_NUM, 
                    string SOCIAL_SECURITY_NUM, 
                    string STATE_ORIGIN_CODE, 
                    string TITLE_CODE, 
                    string TOWN, 
                    string APPLY_PND) {
            return base.Channel.CreateNewCustomerAndAccountAsync(TELL_USERNAME, ADDRESS_LINE1, ADDRESS_LINE2, BIR_DATE_STR, BRA_CODE, ADDRESS_STATE_CODE, COUNTRY_OF_RESIDENCE_CODE, CUSTOMER_CLASSIFICATION_CODE, CUSTOMER_NAME, EMAIL, GENDER, CUR_CODE, LED_CODE, ACCT_NAT, MOB_NUM, FNAME, MNAME, LNAME, NATIONALITY_CODE, OLD_CUSTOMER_NUMBER, LGA_OF_ORIGIN_CODE, REG_NUM, SOCIAL_SECURITY_NUM, STATE_ORIGIN_CODE, TITLE_CODE, TOWN, APPLY_PND);
        }
        
        public System.Data.DataSet getBranch() {
            return base.Channel.getBranch();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getBranchAsync() {
            return base.Channel.getBranchAsync();
        }
        
        public System.Data.DataSet GetBVN(string bvn) {
            return base.Channel.GetBVN(bvn);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBVNAsync(string bvn) {
            return base.Channel.GetBVNAsync(bvn);
        }
        
        public System.Data.DataSet GetLedger() {
            return base.Channel.GetLedger();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLedgerAsync() {
            return base.Channel.GetLedgerAsync();
        }
        
        public System.Data.DataSet GetTitle() {
            return base.Channel.GetTitle();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTitleAsync() {
            return base.Channel.GetTitleAsync();
        }
        
        public string GetTitleName(string titleCode) {
            return base.Channel.GetTitleName(titleCode);
        }
        
        public System.Threading.Tasks.Task<string> GetTitleNameAsync(string titleCode) {
            return base.Channel.GetTitleNameAsync(titleCode);
        }
        
        public System.Data.DataSet GetState() {
            return base.Channel.GetState();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStateAsync() {
            return base.Channel.GetStateAsync();
        }
        
        public string GetStateName(string stateCode) {
            return base.Channel.GetStateName(stateCode);
        }
        
        public System.Threading.Tasks.Task<string> GetStateNameAsync(string stateCode) {
            return base.Channel.GetStateNameAsync(stateCode);
        }
        
        public System.Data.DataSet GetCountry() {
            return base.Channel.GetCountry();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCountryAsync() {
            return base.Channel.GetCountryAsync();
        }
        
        public System.Data.DataSet GetNationality() {
            return base.Channel.GetNationality();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetNationalityAsync() {
            return base.Channel.GetNationalityAsync();
        }
        
        public System.Data.DataSet GetStateOfOrigin() {
            return base.Channel.GetStateOfOrigin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStateOfOriginAsync() {
            return base.Channel.GetStateOfOriginAsync();
        }
        
        public System.Data.DataSet GetAccountCategory() {
            return base.Channel.GetAccountCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountCategoryAsync() {
            return base.Channel.GetAccountCategoryAsync();
        }
        
        public System.Data.DataSet GetLgaOrigin() {
            return base.Channel.GetLgaOrigin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetLgaOriginAsync() {
            return base.Channel.GetLgaOriginAsync();
        }
        
        public System.Data.DataSet GetCustomerClassification() {
            return base.Channel.GetCustomerClassification();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCustomerClassificationAsync() {
            return base.Channel.GetCustomerClassificationAsync();
        }
        
        public System.Data.DataSet GetAccountNature() {
            return base.Channel.GetAccountNature();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountNatureAsync() {
            return base.Channel.GetAccountNatureAsync();
        }
        
        public System.Data.DataSet GetAccountDetailsByNuban(string nuban) {
            return base.Channel.GetAccountDetailsByNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetailsByNubanAsync(string nuban) {
            return base.Channel.GetAccountDetailsByNubanAsync(nuban);
        }
        
        public System.Data.DataSet ConvertNubanToBanksFormat(string nuban) {
            return base.Channel.ConvertNubanToBanksFormat(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConvertNubanToBanksFormatAsync(string nuban) {
            return base.Channel.ConvertNubanToBanksFormatAsync(nuban);
        }
        
        public System.Data.DataSet GetAccountDetails(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetAccountDetails(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetailsAsync(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetAccountDetailsAsync(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Data.DataSet GetAccountDetails2(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetAccountDetails2(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountDetails2Async(string braCode, string cusNum, string curCode, string ledCode, string subAcctCode) {
            return base.Channel.GetAccountDetails2Async(braCode, cusNum, curCode, ledCode, subAcctCode);
        }
        
        public bool IsTellerIDExists(string tellerid) {
            return base.Channel.IsTellerIDExists(tellerid);
        }
        
        public System.Threading.Tasks.Task<bool> IsTellerIDExistsAsync(string tellerid) {
            return base.Channel.IsTellerIDExistsAsync(tellerid);
        }
        
        public string getRegionalChannelCoordinatorUsernameForBranchCode(string bracode) {
            return base.Channel.getRegionalChannelCoordinatorUsernameForBranchCode(bracode);
        }
        
        public System.Threading.Tasks.Task<string> getRegionalChannelCoordinatorUsernameForBranchCodeAsync(string bracode) {
            return base.Channel.getRegionalChannelCoordinatorUsernameForBranchCodeAsync(bracode);
        }
        
        public string isRegionalChannelCoordinatorForBranchCode(string username, string bracode) {
            return base.Channel.isRegionalChannelCoordinatorForBranchCode(username, bracode);
        }
        
        public System.Threading.Tasks.Task<string> isRegionalChannelCoordinatorForBranchCodeAsync(string username, string bracode) {
            return base.Channel.isRegionalChannelCoordinatorForBranchCodeAsync(username, bracode);
        }
        
        public string SendMail(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMail(destinationEmail, sourceEmail, body, subject);
        }
        
        public System.Threading.Tasks.Task<string> SendMailAsync(string destinationEmail, string sourceEmail, string body, string subject) {
            return base.Channel.SendMailAsync(destinationEmail, sourceEmail, body, subject);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OtpService.MailSenderService.SendMailWithAttachmentResponse OtpService.MailSenderService.ServiceSoap.SendMailWithAttachment(OtpService.MailSenderService.SendMailWithAttachmentRequest request) {
            return base.Channel.SendMailWithAttachment(request);
        }
        
        public string SendMailWithAttachment(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            OtpService.MailSenderService.SendMailWithAttachmentRequest inValue = new OtpService.MailSenderService.SendMailWithAttachmentRequest();
            inValue.destinationEmail = destinationEmail;
            inValue.sourceEmail = sourceEmail;
            inValue.body = body;
            inValue.subject = subject;
            inValue.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            inValue.attachmentData = attachmentData;
            inValue.attachmentFilename = attachmentFilename;
            OtpService.MailSenderService.SendMailWithAttachmentResponse retVal = ((OtpService.MailSenderService.ServiceSoap)(this)).SendMailWithAttachment(inValue);
            return retVal.SendMailWithAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OtpService.MailSenderService.SendMailWithAttachmentResponse> OtpService.MailSenderService.ServiceSoap.SendMailWithAttachmentAsync(OtpService.MailSenderService.SendMailWithAttachmentRequest request) {
            return base.Channel.SendMailWithAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<OtpService.MailSenderService.SendMailWithAttachmentResponse> SendMailWithAttachmentAsync(string destinationEmail, string sourceEmail, string body, string subject, string ccEmailSeparatedByComma, byte[] attachmentData, string attachmentFilename) {
            OtpService.MailSenderService.SendMailWithAttachmentRequest inValue = new OtpService.MailSenderService.SendMailWithAttachmentRequest();
            inValue.destinationEmail = destinationEmail;
            inValue.sourceEmail = sourceEmail;
            inValue.body = body;
            inValue.subject = subject;
            inValue.ccEmailSeparatedByComma = ccEmailSeparatedByComma;
            inValue.attachmentData = attachmentData;
            inValue.attachmentFilename = attachmentFilename;
            return ((OtpService.MailSenderService.ServiceSoap)(this)).SendMailWithAttachmentAsync(inValue);
        }
        
        public bool IsTellerIDPasswordActive(string tellerid) {
            return base.Channel.IsTellerIDPasswordActive(tellerid);
        }
        
        public System.Threading.Tasks.Task<bool> IsTellerIDPasswordActiveAsync(string tellerid) {
            return base.Channel.IsTellerIDPasswordActiveAsync(tellerid);
        }
        
        public System.Data.DataSet GetAdDetailsByID(string StaffID) {
            return base.Channel.GetAdDetailsByID(StaffID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAdDetailsByIDAsync(string StaffID) {
            return base.Channel.GetAdDetailsByIDAsync(StaffID);
        }
        
        public string Numbergenerate() {
            return base.Channel.Numbergenerate();
        }
        
        public System.Threading.Tasks.Task<string> NumbergenerateAsync() {
            return base.Channel.NumbergenerateAsync();
        }
        
        public string GetHighestRankedStaff(string[] staffusernames) {
            return base.Channel.GetHighestRankedStaff(staffusernames);
        }
        
        public System.Threading.Tasks.Task<string> GetHighestRankedStaffAsync(string[] staffusernames) {
            return base.Channel.GetHighestRankedStaffAsync(staffusernames);
        }
        
        public string GetAllStaffGrade(string staffId) {
            return base.Channel.GetAllStaffGrade(staffId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllStaffGradeAsync(string staffId) {
            return base.Channel.GetAllStaffGradeAsync(staffId);
        }
        
        public string GetStaffGradeWithStaffID(string staffID) {
            return base.Channel.GetStaffGradeWithStaffID(staffID);
        }
        
        public System.Threading.Tasks.Task<string> GetStaffGradeWithStaffIDAsync(string staffID) {
            return base.Channel.GetStaffGradeWithStaffIDAsync(staffID);
        }
        
        public System.Data.DataSet GetIMALCustByAcctNo(string cif_no) {
            return base.Channel.GetIMALCustByAcctNo(cif_no);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByAcctNoAsync(string cif_no) {
            return base.Channel.GetIMALCustByAcctNoAsync(cif_no);
        }
        
        public System.Data.DataSet GetIMALCustByMobile(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetIMALCustByMobile(mobile_234_format, mobile_080_format);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALCustByMobileAsync(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetIMALCustByMobileAsync(mobile_234_format, mobile_080_format);
        }
        
        public System.Data.DataSet GetBankCustByNuban(string nuban) {
            return base.Channel.GetBankCustByNuban(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByNubanAsync(string nuban) {
            return base.Channel.GetBankCustByNubanAsync(nuban);
        }
        
        public System.Data.DataSet GetAccountsByMobileNo(string mobileNo) {
            return base.Channel.GetAccountsByMobileNo(mobileNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAccountsByMobileNoAsync(string mobileNo) {
            return base.Channel.GetAccountsByMobileNoAsync(mobileNo);
        }
        
        public System.Data.DataSet GetBankCustByMobile(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetBankCustByMobile(mobile_234_format, mobile_080_format);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBankCustByMobileAsync(string mobile_234_format, string mobile_080_format) {
            return base.Channel.GetBankCustByMobileAsync(mobile_234_format, mobile_080_format);
        }
        
        public string GetBankName(string bankCode) {
            return base.Channel.GetBankName(bankCode);
        }
        
        public System.Threading.Tasks.Task<string> GetBankNameAsync(string bankCode) {
            return base.Channel.GetBankNameAsync(bankCode);
        }
        
        public System.Data.DataSet GetBankBVN(string nuban) {
            return base.Channel.GetBankBVN(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetBankBVNAsync(string nuban) {
            return base.Channel.GetBankBVNAsync(nuban);
        }
        
        public System.Data.DataSet GetIMALBVN(string nuban) {
            return base.Channel.GetIMALBVN(nuban);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetIMALBVNAsync(string nuban) {
            return base.Channel.GetIMALBVNAsync(nuban);
        }
        
        public System.Data.DataSet CheckNUBANForComplaint(string NUBAN) {
            return base.Channel.CheckNUBANForComplaint(NUBAN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CheckNUBANForComplaintAsync(string NUBAN) {
            return base.Channel.CheckNUBANForComplaintAsync(NUBAN);
        }
        
        public System.Data.DataSet getAccountFullinfoAllForComplaint(string NUBAN) {
            return base.Channel.getAccountFullinfoAllForComplaint(NUBAN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAccountFullinfoAllForComplaintAsync(string NUBAN) {
            return base.Channel.getAccountFullinfoAllForComplaintAsync(NUBAN);
        }
        
        public System.Data.DataSet CheckAcct(string AccNum) {
            return base.Channel.CheckAcct(AccNum);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CheckAcctAsync(string AccNum) {
            return base.Channel.CheckAcctAsync(AccNum);
        }
        
        public string getClientsForIMAL(string rrr) {
            return base.Channel.getClientsForIMAL(rrr);
        }
        
        public System.Threading.Tasks.Task<string> getClientsForIMALAsync(string rrr) {
            return base.Channel.getClientsForIMALAsync(rrr);
        }
        
        public System.Data.DataSet CheckNUBANOmImal(string NUBAN) {
            return base.Channel.CheckNUBANOmImal(NUBAN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CheckNUBANOmImalAsync(string NUBAN) {
            return base.Channel.CheckNUBANOmImalAsync(NUBAN);
        }
        
        public string getcurrec(string cc) {
            return base.Channel.getcurrec(cc);
        }
        
        public System.Threading.Tasks.Task<string> getcurrecAsync(string cc) {
            return base.Channel.getcurrecAsync(cc);
        }
        
        public System.Data.DataSet getAcctTypeFromBank(string bra_code, string cus_num, string cur_code, string led_code, string sub_led_code) {
            return base.Channel.getAcctTypeFromBank(bra_code, cus_num, cur_code, led_code, sub_led_code);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAcctTypeFromBankAsync(string bra_code, string cus_num, string cur_code, string led_code, string sub_led_code) {
            return base.Channel.getAcctTypeFromBankAsync(bra_code, cus_num, cur_code, led_code, sub_led_code);
        }
        
        public string[] GetWorkflowTrackerExceptions() {
            return base.Channel.GetWorkflowTrackerExceptions();
        }
        
        public System.Threading.Tasks.Task<string[]> GetWorkflowTrackerExceptionsAsync() {
            return base.Channel.GetWorkflowTrackerExceptionsAsync();
        }
        
        public string IsUserOnLeave(string username) {
            return base.Channel.IsUserOnLeave(username);
        }
        
        public System.Threading.Tasks.Task<string> IsUserOnLeaveAsync(string username) {
            return base.Channel.IsUserOnLeaveAsync(username);
        }
        
        public string GetUserIDForCardRequest(string adUsername) {
            return base.Channel.GetUserIDForCardRequest(adUsername);
        }
        
        public System.Threading.Tasks.Task<string> GetUserIDForCardRequestAsync(string adUsername) {
            return base.Channel.GetUserIDForCardRequestAsync(adUsername);
        }
        
        public System.Data.DataSet GetCardProducts() {
            return base.Channel.GetCardProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCardProductsAsync() {
            return base.Channel.GetCardProductsAsync();
        }
        
        public string SubmitCardRequest(
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID) {
            return base.Channel.SubmitCardRequest(Customernumber, Currencycode, Ledgercode, CusName, Address, Phone, Cellphone, Email, Title, Sex, Cuscity, Cardmidname, Cusregion, Account, Cardfirstname, Cardsurname, Carddelivery, Pindelivery, PASNOM, Dateissued, PasExpDat, PasPlace, SecretQuer, SecretAnsw, Resident, CountryRes, CntryReg, RegionReg, CityReg, ResAddress, CntryLive, Birthday, GroupCmd, FinProf, productID, ChannelID);
        }
        
        public System.Threading.Tasks.Task<string> SubmitCardRequestAsync(
                    string Customernumber, 
                    string Currencycode, 
                    string Ledgercode, 
                    string CusName, 
                    string Address, 
                    string Phone, 
                    string Cellphone, 
                    string Email, 
                    string Title, 
                    string Sex, 
                    string Cuscity, 
                    string Cardmidname, 
                    string Cusregion, 
                    string Account, 
                    string Cardfirstname, 
                    string Cardsurname, 
                    string Carddelivery, 
                    string Pindelivery, 
                    string PASNOM, 
                    string Dateissued, 
                    string PasExpDat, 
                    string PasPlace, 
                    string SecretQuer, 
                    string SecretAnsw, 
                    string Resident, 
                    string CountryRes, 
                    string CntryReg, 
                    string RegionReg, 
                    string CityReg, 
                    string ResAddress, 
                    string CntryLive, 
                    string Birthday, 
                    string GroupCmd, 
                    string FinProf, 
                    string productID, 
                    string ChannelID) {
            return base.Channel.SubmitCardRequestAsync(Customernumber, Currencycode, Ledgercode, CusName, Address, Phone, Cellphone, Email, Title, Sex, Cuscity, Cardmidname, Cusregion, Account, Cardfirstname, Cardsurname, Carddelivery, Pindelivery, PASNOM, Dateissued, PasExpDat, PasPlace, SecretQuer, SecretAnsw, Resident, CountryRes, CntryReg, RegionReg, CityReg, ResAddress, CntryLive, Birthday, GroupCmd, FinProf, productID, ChannelID);
        }
        
        public System.Data.DataSet checkWatchList(string FN, string LN) {
            return base.Channel.checkWatchList(FN, LN);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> checkWatchListAsync(string FN, string LN) {
            return base.Channel.checkWatchListAsync(FN, LN);
        }
    }
}
