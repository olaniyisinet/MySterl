@model GIVE_Admin.Models.ProjectsModel

@using (Html.BeginForm("Edit",
	  "Projects",
	  FormMethod.Post,
	  new { enctype = "multipart/form-data" }))
{
	@Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Edit Project</h4>
	<hr />
	<p>@ViewBag.Message</p>

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.Category, Model.Categories, Model.Category, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.TargetAmount, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.TargetAmount, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.TargetAmount, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.Label("Duration in weeks", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })

			<input type="file" name="file" id="file" class="form-control" accept=".jpg, .jpeg, .png" /><br><br>

			@Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">

			@Html.DropDownListFor(model => model.Status, new SelectList(

	new List<Object>{
   //new { value = Model.Status.ToString() , text = Model.Status.ToString() },
   new { value = "Active" , text = "Active"  },
   new { value = "Inactive" , text = "Inactive" },
	},
	"value",
	"text", Model.Status), htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
	@Html.ActionLink("Back to Projects", "Index")
</div>

<script>
	document.getElementById("file").onchange = function (event) {
		var val = document.getElementById("file").value;
		console.log(document.getElementById("file").value);
		document.getElementById("Image").value = val;
	}
</script>